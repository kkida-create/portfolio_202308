{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport { useProductStore } from './product.js';\nexport const useCartStore = defineStore({\n  id: 'cart',\n  state: () => ({\n    cart: []\n  }),\n  getters: {\n    totalAmount() {\n      return this.cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0);\n    }\n  },\n  actions: {\n    addToCart(productId, quantity = 1) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n      if (!product) {\n        return;\n      }\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      const currentQuantityInCart = productInCart ? productInCart.quantity : 0;\n      if (currentQuantityInCart + quantity > product.stock) {\n        // カートに追加したい数量と現在の数量が在庫を超える場合はエラー\n        console.error('Cannot add more items than available in stock.');\n        return;\n      }\n      if (productInCart) {\n        productInCart.quantity += quantity;\n      } else {\n        this.cart.push({\n          ...product,\n          quantity\n        });\n      }\n    },\n    decreaseQuantity(productId) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart && productInCart.quantity > 0) {\n        productInCart.quantity--;\n      }\n    },\n    increaseQuantity(productId) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart && productInCart.quantity < product.stock) {\n        productInCart.quantity++;\n      }\n    },\n    removeProduct(productId) {\n      const index = this.cart.findIndex(item => item.product_id === productId);\n      if (index !== -1) {\n        this.cart.splice(index, 1);\n      }\n    },\n    setQuantity(productId, quantity) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart) {\n        productInCart.quantity = quantity;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useProductStore","useCartStore","id","state","cart","getters","totalAmount","reduce","acc","curr","price","quantity","actions","addToCart","productId","productStore","product","getProductById","productInCart","find","item","product_id","currentQuantityInCart","stock","console","error","push","decreaseQuantity","increaseQuantity","removeProduct","index","findIndex","splice","setQuantity"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/store/cart.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useProductStore } from './product.js'\n\nexport const useCartStore = defineStore({\n  id: 'cart',\n  state: () => ({\n    cart: [],\n  }),\n  getters: {\n    totalAmount() {\n      return this.cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0)\n    },\n  },\n  actions: {\n    addToCart(productId, quantity = 1) {\n      const productStore = useProductStore()\n      const product = productStore.getProductById(productId)\n      if (!product) {\n        return\n      }\n\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      const currentQuantityInCart = productInCart ? productInCart.quantity : 0\n      if (currentQuantityInCart + quantity > product.stock) {\n        // カートに追加したい数量と現在の数量が在庫を超える場合はエラー\n        console.error('Cannot add more items than available in stock.')\n        return\n      }\n\n      if (productInCart) {\n        productInCart.quantity += quantity\n      } else {\n        this.cart.push({ ...product, quantity })\n      }\n    },\n    decreaseQuantity(productId) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart && productInCart.quantity > 0) {\n        productInCart.quantity--\n      }\n    },\n    increaseQuantity(productId) {\n      const productStore = useProductStore()\n      const product = productStore.getProductById(productId)\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart && productInCart.quantity < product.stock) {\n        productInCart.quantity++\n      }\n    },\n    removeProduct(productId) {\n      const index = this.cart.findIndex((item) => item.product_id === productId)\n      if (index !== -1) {\n        this.cart.splice(index, 1)\n      }\n    },\n    setQuantity(productId, quantity) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart) {\n        productInCart.quantity = quantity\n      }\n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}