{"ast":null,"code":"\n/*import { ref, onMounted } from 'vue'\nimport { useStore } from '../store/product.js'\n\nexport default {\n  name: 'CartView',\n  setup() {\n    const store = useStore()\n    const quantityToBuy = ref(1)\n    onMounted(async () => {\n      await store.fetchProducts()\n    })\n    const buyProduct = (productId) => {\n      store.addToCart(productId, quantityToBuy.value)\n      quantityToBuy.value = 1\n    }\n    return {\n      products: store.products,\n      cart: store.cart,\n      quantityToBuy,\n      buyProduct,\n    }\n  },\n}*/","map":{"version":3,"names":[],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/views/CartListView.vue"],"sourcesContent":["<template>\n  <main>\n    <div class=\"cart-container\">\n      <h1 class=\"cart-title\">カート一覧</h1>\n      <div class=\"contents-container\">\n        <div class=\"left-container\">\n          <div class=\"cart-card\">\n            <!--v-for=\"(item, index) in cart\" :key=\"index\"-->\n            <figure class=\"product-photo-container\">\n              <img class=\"product-photo\" src=\"../assets/logo.png\" alt=\"商品\" />\n            </figure>\n            <div class=\"product-detail\">\n              <div class=\"product-name\">商品名<!--{{ products[product.productId].product_name }}--></div>\n              <div class=\"product-price\">￥<!--{{ '¥ ' + products[product.productId].price * item.quantity }}--></div>\n              <div class=\"product-amount-container\">\n                <select class=\"product-amount\" size=\"1\" v-model=\"product.quantity\">\n                  <option><!--v-for=\"i in products[item.productId].stock\" :key=\"i\">{{ i }}--></option>\n                </select>\n                <div class=\"delete-button\" @click=\"removeFromCart(item.productId)\">削除</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"right-container\">\n          <div class=\"total-card\">\n            <div class=\"total-quantity\">\n              合計個数\n              <!--{{ totalQuantity }}個-->\n            </div>\n            <div class=\"total-price\">合計金額 <!--{{ totalPrice }}円--></div>\n            <button class=\"buying-procedure-button\">購入手続きへ</button>\n          </div>\n          <button class=\"return-to-product\">商品一覧へ戻る</button>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\n/*import { ref, onMounted } from 'vue'\nimport { useStore } from '../store/product.js'\n\nexport default {\n  name: 'CartView',\n  setup() {\n    const store = useStore()\n    const quantityToBuy = ref(1)\n    onMounted(async () => {\n      await store.fetchProducts()\n    })\n    const buyProduct = (productId) => {\n      store.addToCart(productId, quantityToBuy.value)\n      quantityToBuy.value = 1\n    }\n    return {\n      products: store.products,\n      cart: store.cart,\n      quantityToBuy,\n      buyProduct,\n    }\n  },\n}*/\n</script>\n\n<style scoped>\n.cart-container {\n  padding: 0 20px;\n  min-width: 950px;\n}\n.contents-container {\n  display: flex;\n  justify-content: space-between;\n  transition: width 0.3s ease;\n}\n.left-container {\n  width: 500px;\n}\n.cart-title {\n  font-size: 40px;\n}\n.cart-card {\n  display: flex;\n  border: 1px solid black;\n  height: 250px;\n  width: 100%;\n}\n.product-photo-container {\n  width: 220px;\n  height: 220px;\n  display: block;\n  margin: 15px;\n}\n.product-photo {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n.product-detail {\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n  align-items: center;\n}\n.product-name {\n  font-size: 24px;\n}\n.product-price {\n  font-size: 24px;\n  margin-top: 10px;\n}\n.product-amount-container {\n  display: flex;\n  margin-top: auto;\n  padding-bottom: 20px;\n  align-items: center;\n}\n.product-amount {\n  border-radius: 4px;\n  border: 1.5px solid #ffffff5d;\n}\n.delete-button {\n  margin-left: 30px;\n}\n.right-container {\n  width: 300px;\n}\n.total-card {\n  width: 100%;\n  height: 250px;\n  font-size: 24px;\n  border: 1px solid black;\n}\n.total-quantity {\n  padding-top: 40px;\n}\n.total-price {\n  margin-top: 20px;\n}\n.buying-procedure-button {\n  margin-top: 50px;\n}\n.return-to-product {\n  font-size: 24px;\n  margin-top: 60px;\n}\n@media screen and (min-width: 950px) {\n  .left-container {\n    width: 52.63%;\n  }\n}\n</style>\n"],"mappings":";AAwCA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA"},"metadata":{},"sourceType":"script","externalDependencies":[]}