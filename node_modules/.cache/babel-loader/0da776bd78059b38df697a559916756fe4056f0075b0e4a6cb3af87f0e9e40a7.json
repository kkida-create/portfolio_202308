{"ast":null,"code":"import { computed } from 'vue';\nimport { usePaymentStore } from '@/store/payment.js';\nimport { useCartStore } from '@/store/cart.js';\nexport default {\n  setup() {\n    const paymentStore = usePaymentStore();\n    const selectedAddress = paymentStore.selectedAddress;\n    const selectedPaymentMethod = computed(() => {\n      const defaultMethod = {\n        name: '',\n        description: ''\n      };\n      const selectedMethod = paymentStore.selectedPaymentMethod || defaultMethod;\n      return {\n        name: selectedMethod.name || '支払い方法が選択されていません',\n        description: selectedMethod.description || 'カード情報が選択されていません'\n      };\n    });\n    const shouldShowDescription = computed(() => selectedPaymentMethod.value.name === 'クレジットカード');\n    const cartStore = useCartStore();\n    const totalQuantity = computed(() => {\n      return cartStore.cart.reduce((sum, product) => sum + Number(product.quantity), 0);\n    });\n    const totalPrice = computed(() => cartStore.cart.reduce((sum, product) => sum + product.price * product.quantity, 0));\n    const today = ref(new Date());\n    const formattedDate = computed(() => {\n      const year = today.value.getFullYear();\n      const month = today.value.getMonth() + 1; // 月は0から始まるので1を加える\n      const date = today.value.getDate();\n      return `${year}年${month}月${date}日`;\n    });\n    function setQuantity(productId, quantity) {\n      cartStore.setQuantity(productId, Number(quantity));\n    }\n    function formatNumber(value) {\n      return Number(value).toLocaleString();\n    }\n    return {\n      selectedAddress,\n      selectedPaymentMethod,\n      shouldShowDescription,\n      cart: cartStore.cart,\n      totalQuantity,\n      totalPrice,\n      setQuantity,\n      formatNumber,\n      formattedDate\n    };\n  }\n};","map":{"version":3,"names":["computed","usePaymentStore","useCartStore","setup","paymentStore","selectedAddress","selectedPaymentMethod","defaultMethod","name","description","selectedMethod","shouldShowDescription","value","cartStore","totalQuantity","cart","reduce","sum","product","Number","quantity","totalPrice","price","today","ref","Date","formattedDate","year","getFullYear","month","getMonth","date","getDate","setQuantity","productId","formatNumber","toLocaleString"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/views/CartCheckView.vue"],"sourcesContent":["<template>\n  <main>\n    <div class=\"cart-check-container\">\n      <h1 class=\"page-title\">ご注文内容確認画面</h1>\n      <div class=\"contents-container\">\n        <div class=\"left-container\">\n          <div class=\"cart-card-container\">\n            <div class=\"cart-card\" v-for=\"product in cart\" :key=\"product.product_id\">\n              <figure class=\"product-photo-container\">\n                <img class=\"product-photo\" src=\"../assets/logo.png\" alt=\"商品\" />\n              </figure>\n              <div class=\"product-detail\">\n                <div class=\"product-name\">{{ product.product_name }}</div>\n                <div class=\"product-price\">¥ {{ formatNumber(product.price) }}</div>\n                <div class=\"select-button-container\">\n                  <div class=\"product-amount-container\">\n                    <p class=\"amount\">個数：</p>\n                    <select\n                      class=\"product-amount\"\n                      size=\"1\"\n                      v-model=\"product.quantity\"\n                      @change=\"setQuantity(product.product_id, $event.target.value)\"\n                    >\n                      <option v-for=\"num in product.stock\" :key=\"num\">{{ num }}</option>\n                    </select>\n                  </div>\n                  <div class=\"size-select-container\">\n                    <p class=\"size\">サイズ：</p>\n                    <select class=\"size-select\" size=\"1\">\n                      <option>S</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"total-card\">\n            <div class=\"total-quantity\">合計個数 {{ totalQuantity }} 個</div>\n            <div class=\"total-price\">合計金額 {{ formatNumber(totalPrice) }} 円</div>\n          </div>\n        </div>\n        <div class=\"right-container\">\n          <div class=\"pay-info-check\">\n            <div class=\"pay-name-container\">\n              <p class=\"pay-text\">お名前</p>\n              <p class=\"pay-info\">xxx xxx様</p>\n            </div>\n            <div class=\"pay-address-container\">\n              <p class=\"pay-text\">お届け先</p>\n              <p class=\"pay-info\" v-if=\"selectedAddress\">\n                {{ selectedAddress.address }}\n              </p>\n              <p class=\"pay-info\" v-else>住所が選択されていません</p>\n            </div>\n            <div class=\"pay-method-container\">\n              <p class=\"pay-text\">お支払い</p>\n              <p class=\"pay-method\">\n                {{ selectedPaymentMethod.name }}\n              </p>\n              <p class=\"pay-info\" v-if=\"shouldShowDescription\">{{ selectedPaymentMethod.description }}</p>\n            </div>\n            <div class=\"pay-day-container\">\n              <p class=\"pay-text\">注文確定日</p>\n              <p class=\"pay-info\">{{ formattedDate }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"button-container\">\n        <button class=\"return-to-product\">← 支払い画面に戻る</button>\n        <button class=\"confirm-button\">注文を確定する</button>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport { usePaymentStore } from '@/store/payment.js'\nimport { useCartStore } from '@/store/cart.js'\n\nexport default {\n  setup() {\n    const paymentStore = usePaymentStore()\n    const selectedAddress = paymentStore.selectedAddress\n    const selectedPaymentMethod = computed(() => {\n      const defaultMethod = { name: '', description: '' }\n      const selectedMethod = paymentStore.selectedPaymentMethod || defaultMethod\n\n      return {\n        name: selectedMethod.name || '支払い方法が選択されていません',\n        description: selectedMethod.description || 'カード情報が選択されていません',\n      }\n    })\n    const shouldShowDescription = computed(() => selectedPaymentMethod.value.name === 'クレジットカード')\n    const cartStore = useCartStore()\n    const totalQuantity = computed(() => {\n      return cartStore.cart.reduce((sum, product) => sum + Number(product.quantity), 0)\n    })\n    const totalPrice = computed(() =>\n      cartStore.cart.reduce((sum, product) => sum + product.price * product.quantity, 0)\n    )\n    const today = ref(new Date())\n      const formattedDate = computed(() => {\n      const year = today.value.getFullYear()\n      const month = today.value.getMonth() + 1 // 月は0から始まるので1を加える\n      const date = today.value.getDate()\n      return `${year}年${month}月${date}日`\n    })\n    function setQuantity(productId, quantity) {\n      cartStore.setQuantity(productId, Number(quantity))\n    }\n    function formatNumber(value) {\n      return Number(value).toLocaleString()\n    }\n\n    return {\n      selectedAddress,\n      selectedPaymentMethod,\n      shouldShowDescription,\n      cart: cartStore.cart,\n      totalQuantity,\n      totalPrice,\n      setQuantity,\n      formatNumber,\n      formattedDate,\n    }\n  },\n}\n</script>\n\n<style scoped>\n.cart-check-container {\n  min-width: 950px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 100vh;\n  background-color: #eeeeee;\n  padding-top: 30px;\n}\n.contents-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n  padding: 0 30px 20px;\n}\n.left-container {\n  width: 488px;\n}\n\n.cart-card-container {\n  border: solid 1px black;\n  padding: 10px;\n  background-color: white;\n}\n.cart-card {\n  display: flex;\n  height: 250px;\n  width: 100%;\n}\n.product-photo-container {\n  width: 220px;\n  height: 220px;\n  display: block;\n  margin: 15px;\n}\n.product-photo {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n.product-detail {\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n.product-name {\n  font-size: 24px;\n}\n.product-price {\n  font-size: 24px;\n  margin-top: 10px;\n}\n.select-button-container {\n  display: flex;\n}\n.product-amount-container {\n  display: flex;\n  border-radius: 4px;\n  border: 1.5px solid black;\n  padding: 0 3px;\n}\n.product-amount {\n  border: none;\n}\n.amount {\n  margin: 0 0;\n  padding: 0 3px;\n  white-space: nowrap;\n}\n.size-select-container {\n  display: flex;\n  border-radius: 4px;\n  border: 1.5px solid black;\n  margin-left: 20px;\n  padding: 0 3px;\n}\n.size-select {\n  border: none;\n  white-space: nowrap;\n}\n.size {\n  margin: 0 0;\n  white-space: nowrap;\n}\n.total-card {\n  width: 100%;\n  font-size: 24px;\n  border: 1px solid black;\n  padding: 20px;\n  margin-top: 30px;\n  text-align: left;\n  background-color: white;\n}\n.right-container {\n  border: solid 1px black;\n  padding: 10px;\n  background-color: white;\n  width: 300px;\n  height: 500px;\n}\n.pay-text {\n  font-size: 18px;\n  font-weight: bold;\n}\n.pay-info {\n  font-size: 14px;\n}\n.pay-method {\n  font-size: 14px;\n  margin-bottom: 5px;\n}\n.button-container {\n  display: flex;\n  padding-bottom: 30px;\n  margin-top: auto;\n  justify-content: space-between;\n  padding: 0 80px 50px 80px;\n}\n.return-to-product {\n  font-size: 24px;\n  padding: 8px 14px;\n}\n.confirm-button {\n  font-size: 24px;\n  background-color: rgba(0, 0, 0, 0.766);\n  color: white;\n  padding: 8px 14px;\n}\n.confirm-button:hover {\n  color: rgb(241, 67, 67);\n  background-color: rgb(252, 195, 195);\n}\n.return-to-product:hover {\n  background-color: darkgray;\n}\n@media screen and (min-width: 950px) {\n  .left-container {\n    width: 54.6315%;\n  }\n}\n</style>\n"],"mappings":"AA6EA,SAASA,QAAO,QAAS,KAAI;AAC7B,SAASC,eAAc,QAAS,oBAAmB;AACnD,SAASC,YAAW,QAAS,iBAAgB;AAE7C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,YAAW,GAAIH,eAAe,CAAC;IACrC,MAAMI,eAAc,GAAID,YAAY,CAACC,eAAc;IACnD,MAAMC,qBAAoB,GAAIN,QAAQ,CAAC,MAAM;MAC3C,MAAMO,aAAY,GAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG;MAClD,MAAMC,cAAa,GAAIN,YAAY,CAACE,qBAAoB,IAAKC,aAAY;MAEzE,OAAO;QACLC,IAAI,EAAEE,cAAc,CAACF,IAAG,IAAK,iBAAiB;QAC9CC,WAAW,EAAEC,cAAc,CAACD,WAAU,IAAK;MAC7C;IACF,CAAC;IACD,MAAME,qBAAoB,GAAIX,QAAQ,CAAC,MAAMM,qBAAqB,CAACM,KAAK,CAACJ,IAAG,KAAM,UAAU;IAC5F,MAAMK,SAAQ,GAAIX,YAAY,CAAC;IAC/B,MAAMY,aAAY,GAAId,QAAQ,CAAC,MAAM;MACnC,OAAOa,SAAS,CAACE,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAE,GAAIE,MAAM,CAACD,OAAO,CAACE,QAAQ,CAAC,EAAE,CAAC;IAClF,CAAC;IACD,MAAMC,UAAS,GAAIrB,QAAQ,CAAC,MAC1Ba,SAAS,CAACE,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAE,GAAIC,OAAO,CAACI,KAAI,GAAIJ,OAAO,CAACE,QAAQ,EAAE,CAAC,CACnF;IACA,MAAMG,KAAI,GAAIC,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC;IAC1B,MAAMC,aAAY,GAAI1B,QAAQ,CAAC,MAAM;MACrC,MAAM2B,IAAG,GAAIJ,KAAK,CAACX,KAAK,CAACgB,WAAW,CAAC;MACrC,MAAMC,KAAI,GAAIN,KAAK,CAACX,KAAK,CAACkB,QAAQ,CAAC,IAAI,GAAE;MACzC,MAAMC,IAAG,GAAIR,KAAK,CAACX,KAAK,CAACoB,OAAO,CAAC;MACjC,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGE,IAAK,GAAC;IACnC,CAAC;IACD,SAASE,WAAWA,CAACC,SAAS,EAAEd,QAAQ,EAAE;MACxCP,SAAS,CAACoB,WAAW,CAACC,SAAS,EAAEf,MAAM,CAACC,QAAQ,CAAC;IACnD;IACA,SAASe,YAAYA,CAACvB,KAAK,EAAE;MAC3B,OAAOO,MAAM,CAACP,KAAK,CAAC,CAACwB,cAAc,CAAC;IACtC;IAEA,OAAO;MACL/B,eAAe;MACfC,qBAAqB;MACrBK,qBAAqB;MACrBI,IAAI,EAAEF,SAAS,CAACE,IAAI;MACpBD,aAAa;MACbO,UAAU;MACVY,WAAW;MACXE,YAAY;MACZT;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}