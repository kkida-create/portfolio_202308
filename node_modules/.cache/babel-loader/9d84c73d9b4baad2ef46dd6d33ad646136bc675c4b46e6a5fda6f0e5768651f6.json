{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport { useProductStore } from './product.js';\nexport const useCartStore = defineStore({\n  id: 'cart',\n  state: () => ({\n    cart: []\n  }),\n  getters: {\n    totalAmount() {\n      return this.cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0);\n    },\n    quantityInCart: state => productId => {\n      const productInCart = state.cart.find(product => product.product_id === productId);\n      return productInCart ? productInCart.quantity : 0;\n    },\n    totalQuantity() {\n      return this.cart.reduce((acc, product) => acc + product.quantity, 0);\n    }\n  },\n  actions: {\n    addToCart(productId, quantity = 1) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n      if (!product) {\n        return;\n      }\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart) {\n        // カート内に同じ商品が存在する場合は、その商品の数量を指定の数量に加える\n        if (productInCart.quantity + Number(quantity) <= product.stock) {\n          productInCart.quantity += Number(quantity);\n        } else {\n          console.error('Cannot add more items than available in stock.');\n          return;\n        }\n      } else {\n        // カート内にその商品がない場合は、新しく商品を追加\n        if (quantity <= product.stock) {\n          this.cart.push({\n            ...product,\n            quantity: Number(quantity)\n          });\n        } else {\n          console.error('Cannot add more items than available in stock.');\n          return;\n        }\n      }\n    },\n    decreaseQuantity(productId) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart && productInCart.quantity > 0) {\n        productInCart.quantity--;\n      }\n    },\n    increaseQuantity(productId) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart && productInCart.quantity < product.stock) {\n        productInCart.quantity++;\n      }\n    },\n    removeProduct(productId) {\n      const index = this.cart.findIndex(item => item.product_id === productId);\n      if (index !== -1) {\n        this.cart.splice(index, 1);\n      }\n    },\n    setQuantity(productId, quantity) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart) {\n        productInCart.quantity = quantity;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useProductStore","useCartStore","id","state","cart","getters","totalAmount","reduce","acc","curr","price","quantity","quantityInCart","productId","productInCart","find","product","product_id","totalQuantity","actions","addToCart","productStore","getProductById","item","Number","stock","console","error","push","decreaseQuantity","increaseQuantity","removeProduct","index","findIndex","splice","setQuantity"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/store/cart.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useProductStore } from './product.js'\n\nexport const useCartStore = defineStore({\n  id: 'cart',\n  state: () => ({\n    cart: [],\n  }),\n  getters: {\n    totalAmount() {\n      return this.cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0)\n    },\n    quantityInCart: (state) => (productId) => {\n      const productInCart = state.cart.find((product) => product.product_id === productId)\n      return productInCart ? productInCart.quantity : 0\n    },\n    totalQuantity() {\n      return this.cart.reduce((acc, product) => acc + product.quantity, 0)\n    },\n  },\n  actions: {\n    addToCart(productId, quantity = 1) {\n      const productStore = useProductStore()\n      const product = productStore.getProductById(productId)\n      if (!product) {\n        return\n      }\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n\n      if (productInCart) {\n        // カート内に同じ商品が存在する場合は、その商品の数量を指定の数量に加える\n        if (productInCart.quantity + Number(quantity) <= product.stock) {\n          productInCart.quantity += Number(quantity)\n        } else {\n          console.error('Cannot add more items than available in stock.')\n          return\n        }\n      } else {\n        // カート内にその商品がない場合は、新しく商品を追加\n        if (quantity <= product.stock) {\n          this.cart.push({ ...product, quantity: Number(quantity) })\n        } else {\n          console.error('Cannot add more items than available in stock.')\n          return\n        }\n      }\n    },\n    decreaseQuantity(productId) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart && productInCart.quantity > 0) {\n        productInCart.quantity--\n      }\n    },\n    increaseQuantity(productId) {\n      const productStore = useProductStore()\n      const product = productStore.getProductById(productId)\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart && productInCart.quantity < product.stock) {\n        productInCart.quantity++\n      }\n    },\n    removeProduct(productId) {\n      const index = this.cart.findIndex((item) => item.product_id === productId)\n      if (index !== -1) {\n        this.cart.splice(index, 1)\n      }\n    },\n    setQuantity(productId, quantity) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart) {\n        productInCart.quantity = quantity\n      }\n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}