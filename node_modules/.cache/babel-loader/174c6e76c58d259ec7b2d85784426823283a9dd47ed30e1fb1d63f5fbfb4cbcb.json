{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"商品一覧\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"product-info\"\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"product\",\n      key: product.product_id\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString(product.product_name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"価格: ¥\" + _toDisplayString(product.price), 1 /* TEXT */), _createElementVNode(\"p\", null, \"在庫: \" + _toDisplayString(product.stock), 1 /* TEXT */), _createElementVNode(\"label\", null, [_createTextVNode(\" 数量: \"), _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => $setup.selectedQuantities[product.product_id] = $event\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.availableQuantity(product), num => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: num\n      }, _toDisplayString(num), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_3), [[_vModelSelect, $setup.selectedQuantities[product.product_id]]])]), _createElementVNode(\"p\", null, \"カートに入れられた合計数: \" + _toDisplayString(_ctx.cartStore.getQuantityInCart(product.product_id)), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.addToCart(product, $setup.selectedQuantities[product.product_id])\n    }, \"カートに追加\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","products","product","key","product_id","_hoisted_2","_toDisplayString","product_name","price","stock","selectedQuantities","$event","availableQuantity","num","_ctx","cartStore","getQuantityInCart","onClick","addToCart","_hoisted_4"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/views/DisplayView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>商品一覧</h1>\n    <div class=\"product\" v-for=\"product in products\" :key=\"product.product_id\">\n      <div class=\"product-info\">\n        <h2>{{ product.product_name }}</h2>\n        <p>価格: ¥{{ product.price }}</p>\n        <p>在庫: {{ product.stock }}</p>\n        <label>\n          数量:\n          <select v-model=\"selectedQuantities[product.product_id]\">\n            <option v-for=\"num in availableQuantity(product)\" :key=\"num\">{{ num }}</option>\n          </select>\n        </label>\n        <p>カートに入れられた合計数: {{ cartStore.getQuantityInCart(product.product_id) }}</p>\n      </div>\n      <button @click=\"addToCart(product, selectedQuantities[product.product_id])\">カートに追加</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useProductStore } from '@/store/product.js'\nimport { useCartStore } from '@/store/cart.js'\nimport { getQuantityInCart } from './cart.js'\n\nexport default {\n  setup() {\n    const productStore = useProductStore()\n    const cartStore = useCartStore()\n    const selectedQuantities = ref({})\n\n    function addToCart(product, quantity) {\n      cartStore.addToCart(product.product_id, quantity)\n      selectedQuantities.value[product.product_id] = 1 // カートに追加した後に初期値を設定\n    }\n\n    function availableQuantity(product) {\n      const productInCart = cartStore.cart.find((item) => item.product_id === product.product_id)\n      const quantityInCart = productInCart ? productInCart.selectedQuantity : 0 // selectedQuantity を使用する\n      return Array.from({ length: product.stock - quantityInCart }, (_, i) => i + 1)\n    }\n\n    function getQuantityInCart(productId) {\n      const productInCart = cartStore.cart.find((item) => item.product_id === productId)\n      return productInCart ? productInCart.selectedQuantity : 0\n    }\n\n    onMounted(async () => {\n      await productStore.fetchProducts()\n\n      productStore.products.forEach((product) => {\n        selectedQuantities.value[product.product_id] = 1\n      })\n    })\n\n    return {\n      products: productStore.products,\n      selectedQuantities,\n      addToCart,\n      availableQuantity,\n      getQuantityInCart,\n    }\n  },\n}\n</script>\n\n<style scoped></style>\n"],"mappings":";gCAEIA,mBAAA,CAAa,YAAT,MAAI;;EAEDC,KAAK,EAAC;AAAc;;;;uBAH7BC,mBAAA,CAiBM,cAhBJC,UAAa,G,kBACbD,mBAAA,CAcME,SAAA,QAAAC,WAAA,CAdiCC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnCN,mBAAA,CAcM;MAdDD,KAAK,EAAC,SAAS;MAA8BQ,GAAG,EAAED,OAAO,CAACE;QAC7DV,mBAAA,CAWM,OAXNW,UAWM,GAVJX,mBAAA,CAAmC,YAAAY,gBAAA,CAA5BJ,OAAO,CAACK,YAAY,kBAC3Bb,mBAAA,CAA+B,WAA5B,OAAK,GAAAY,gBAAA,CAAGJ,OAAO,CAACM,KAAK,kBACxBd,mBAAA,CAA8B,WAA3B,MAAI,GAAAY,gBAAA,CAAGJ,OAAO,CAACO,KAAK,kBACvBf,mBAAA,CAKQ,gB,iBALD,OAEL,G,gBAAAA,mBAAA,CAES;uCAFQM,MAAA,CAAAU,kBAAkB,CAACR,OAAO,CAACE,UAAU,IAAAO;2BACpDf,mBAAA,CAA+EE,SAAA,QAAAC,WAAA,CAAzDC,MAAA,CAAAY,iBAAiB,CAACV,OAAO,GAAhCW,GAAG;2BAAlBjB,mBAAA,CAA+E;QAA5BO,GAAG,EAAEU;MAAG,GAAAP,gBAAA,CAAKO,GAAG;kFADpDb,MAAA,CAAAU,kBAAkB,CAACR,OAAO,CAACE,UAAU,G,KAIxDV,mBAAA,CAA0E,WAAvE,gBAAc,GAAAY,gBAAA,CAAGQ,IAAA,CAAAC,SAAS,CAACC,iBAAiB,CAACd,OAAO,CAACE,UAAU,kB,GAEpEV,mBAAA,CAA2F;MAAlFuB,OAAK,EAAAN,MAAA,IAAEX,MAAA,CAAAkB,SAAS,CAAChB,OAAO,EAAEF,MAAA,CAAAU,kBAAkB,CAACR,OAAO,CAACE,UAAU;OAAI,QAAM,iBAAAe,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}