{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/top',\n  name: 'top',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/TopView.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"display\" */'../views/LoginPage.vue')\n}, {\n  path: '/contact',\n  name: 'contact',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"contact\" */'../views/ContactView.vue')\n}, {\n  path: '/contact-confirm',\n  name: 'contactConfirm',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"contactConfirm\" */'../views/ContactConfirm.vue'),\n  beforeEnter: (to, from, next) => {\n    if (from.name === 'contact') {\n      // /contact からの遷移の場合は /contact-confirm にアクセス可能\n      next();\n    } else {\n      // それ以外の場合は /contact にリダイレクト\n      next('/contact');\n    }\n  }\n}, {\n  path: '/cart-list',\n  name: 'CartList',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"CartList\" */'../views/CartListView.vue')\n}, {\n  path: '/cart-payment',\n  name: 'CartPayment',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"CartPayment\" */'../views/CartPaymentView.vue')\n}, {\n  path: '/cart-check',\n  name: 'CartCheck',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"CartCheck\" */'../views/CartCheckView.vue')\n}, {\n  path: '/cart-complete',\n  name: 'CartComplete',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"CartComplete\" */'../views/CartCompleteView.vue')\n}, {\n  path: '/product',\n  name: 'Product',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"Product\" */'../views/ProductView.vue')\n}, {\n  path: '/productDetails',\n  name: 'productDetails',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"ProductDetails\" */'../views/ProductDetailsView.vue')\n}, {\n  path: '/favorite',\n  name: 'Favorite',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"Favorite\" */'../views/FavoriteView.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","routes","path","name","component","beforeEnter","to","from","next","router","history","process","env","BASE_URL"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n  },\n  {\n    path: '/top',\n    name: 'top',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/TopView.vue'),\n  },\n  {\n    path: '/login',\n    name: 'login',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"display\" */ '../views/LoginPage.vue'),\n  },\n  {\n    path: '/contact',\n    name: 'contact',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"contact\" */ '../views/ContactView.vue'),\n  },\n  {\n    path: '/contact-confirm',\n    name: 'contactConfirm',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"contactConfirm\" */ '../views/ContactConfirm.vue'),\n    beforeEnter: (to, from, next) => {\n      if (from.name === 'contact') {\n        // /contact からの遷移の場合は /contact-confirm にアクセス可能\n        next()\n      } else {\n        // それ以外の場合は /contact にリダイレクト\n        next('/contact')\n      }\n    },\n  },\n  {\n    path: '/cart-list',\n    name: 'CartList',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartList\" */ '../views/CartListView.vue'),\n  },\n  {\n    path: '/cart-payment',\n    name: 'CartPayment',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartPayment\" */ '../views/CartPaymentView.vue'),\n  },\n  {\n    path: '/cart-check',\n    name: 'CartCheck',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartCheck\" */ '../views/CartCheckView.vue'),\n  },\n  {\n    path: '/cart-complete',\n    name: 'CartComplete',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartComplete\" */ '../views/CartCompleteView.vue'),\n  },\n  {\n    path: '/product',\n    name: 'Product',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"Product\" */ '../views/ProductView.vue'),\n  },\n  {\n    path: '/productDetails',\n    name: 'productDetails',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ProductDetails\" */ '../views/ProductDetailsView.vue'),\n  },\n  {\n    path: '/favorite',\n    name: 'Favorite',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"Favorite\" */ '../views/FavoriteView.vue'),\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ;AACb,CAAC,EACD;EACEE,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,KAAK;EACX;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,sBAAsB;AAChF,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,iCAAkC,wBAAwB;AACpF,CAAC,EACD;EACEF,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACf;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,iCAAkC,0BAA0B;AACtF,CAAC,EACD;EACEF,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,gBAAgB;EACtB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,wCAAyC,6BAA6B,CAAC;EAC/FC,WAAW,EAAEA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC/B,IAAID,IAAI,CAACJ,IAAI,KAAK,SAAS,EAAE;MAC3B;MACAK,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACL;MACAA,IAAI,CAAC,UAAU,CAAC;IAClB;EACF;AACF,CAAC,EACD;EACEN,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,UAAU;EAChB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,kCAAmC,2BAA2B;AACxF,CAAC,EACD;EACEF,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,aAAa;EACnB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,qCAAsC,8BAA8B;AAC9F,CAAC,EACD;EACEF,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,mCAAoC,4BAA4B;AAC1F,CAAC,EACD;EACEF,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,cAAc;EACpB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,sCAAuC,+BAA+B;AAChG,CAAC,EACD;EACEF,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACf;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,iCAAkC,0BAA0B;AACtF,CAAC,EACD;EACEF,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,gBAAgB;EACtB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,wCAAyC,iCAAiC;AACpG,CAAC,EACD;EACEF,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChB;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,kCAAmC,2BAA2B;AACxF,CAAC,CACF;AAED,MAAMK,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAACY,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CZ;AACF,CAAC,CAAC;AAEF,eAAeQ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}