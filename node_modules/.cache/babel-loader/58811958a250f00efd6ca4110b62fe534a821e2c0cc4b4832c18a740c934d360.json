{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { computed, ref, onMounted } from \"vue\";\nimport { usePaymentStore } from \"@/store/payment.js\";\nimport { useCartStore } from \"@/store/cart.js\";\nimport { useProductStore } from \"@/store/product.js\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  setup: function setup() {\n    onMounted(function () {\n      window.scrollTo(0, 0);\n    });\n    var router = useRouter();\n    var paymentStore = usePaymentStore();\n    var selectedAddress = paymentStore.selectedAddress;\n    var selectedPaymentMethod = computed(function () {\n      var defaultMethod = {\n        name: \"\",\n        description: \"\"\n      };\n      var selectedMethod = paymentStore.selectedPaymentMethod || defaultMethod;\n      return {\n        name: selectedMethod.name || \"支払い方法が選択されていません\",\n        description: selectedMethod.description || \"カード情報が選択されていません\"\n      };\n    });\n    var shouldShowDescription = computed(function () {\n      return selectedPaymentMethod.value.name === \"クレジットカード\";\n    });\n    var cartStore = useCartStore();\n    var totalQuantity = computed(function () {\n      return cartStore.cart.reduce(function (sum, product) {\n        return sum + Number(product.selectedQuantity);\n      }, 0);\n    });\n    var totalPrice = computed(function () {\n      return cartStore.cart.reduce(function (sum, product) {\n        return sum + product.price * product.selectedQuantity;\n      }, 0);\n    });\n    var today = ref(new Date());\n    var formattedDate = computed(function () {\n      var year = today.value.getFullYear();\n      var month = today.value.getMonth() + 1;\n      var date = today.value.getDate();\n      return \"\".concat(year, \"\\u5E74\").concat(month, \"\\u6708\").concat(date, \"\\u65E5\");\n    });\n    function setQuantity(productId, quantity) {\n      var productStore = useProductStore();\n      var product = productStore.getProductById(productId);\n      var updatedQuantity = Number(quantity);\n      if (updatedQuantity <= product.stock) {\n        cartStore.setQuantity(productId, updatedQuantity);\n      }\n    }\n    function formatNumber(value) {\n      return Number(value).toLocaleString();\n    }\n    function getQuantityInCart(productId) {\n      var productInCart = cartStore.cart.find(function (item) {\n        return item.product_id === productId;\n      });\n      return productInCart ? productInCart.selectedQuantity : 0;\n    }\n    function availableQuantity(product) {\n      return Array.from({\n        length: product.stock\n      }, function (_, i) {\n        return i + 1;\n      });\n    }\n    var confirmOrder = function confirmOrder() {\n      cartStore.clearCart();\n      router.push(\"/cart-complete\");\n    };\n    return {\n      selectedAddress: selectedAddress,\n      selectedPaymentMethod: selectedPaymentMethod,\n      shouldShowDescription: shouldShowDescription,\n      cart: cartStore.cart,\n      totalQuantity: totalQuantity,\n      totalPrice: totalPrice,\n      setQuantity: setQuantity,\n      formatNumber: formatNumber,\n      formattedDate: formattedDate,\n      getQuantityInCart: getQuantityInCart,\n      availableQuantity: availableQuantity,\n      confirmOrder: confirmOrder\n    };\n  },\n  methods: {\n    returnToPayment: function returnToPayment() {\n      this.$router.push(\"/cart-payment\");\n    }\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","usePaymentStore","useCartStore","useProductStore","useRouter","setup","window","scrollTo","router","paymentStore","selectedAddress","selectedPaymentMethod","defaultMethod","name","description","selectedMethod","shouldShowDescription","value","cartStore","totalQuantity","cart","reduce","sum","product","Number","selectedQuantity","totalPrice","price","today","Date","formattedDate","year","getFullYear","month","getMonth","date","getDate","concat","setQuantity","productId","quantity","productStore","getProductById","updatedQuantity","stock","formatNumber","toLocaleString","getQuantityInCart","productInCart","find","item","product_id","availableQuantity","Array","from","length","_","i","confirmOrder","clearCart","push","methods","returnToPayment","$router"],"sources":["/Users/kitakanta/Desktop/就活/ポートフォリオ_20230819/src/views/CartCheckView.vue"],"sourcesContent":["<template>\n  <main>\n    <div class=\"cart-check-container\">\n      <h1 class=\"page-title\">ご注文内容確認画面</h1>\n      <div class=\"contents-container\">\n        <div class=\"left-container\">\n          <div class=\"cart-card-container\">\n            <div\n              class=\"cart-card\"\n              v-for=\"product in cart\"\n              :key=\"product.product_id\"\n            >\n              <figure class=\"product-photo-container\">\n                <img\n                  class=\"product-photo\"\n                  src=\"../assets/product_sample.jpg\"\n                  alt=\"商品\"\n                />\n              </figure>\n              <div class=\"product-detail\">\n                <div class=\"product-name\">{{ product.product_name }}</div>\n                <div class=\"product-price\">\n                  ¥{{ formatNumber(product.price) }}(税込)\n                </div>\n                <div class=\"select-button-container\">\n                  <div class=\"product-amount-container\">\n                    <p class=\"amount\">個数：</p>\n                    <select\n                      class=\"product-amount\"\n                      size=\"1\"\n                      :value=\"getQuantityInCart(product.product_id)\"\n                      @change=\"\n                        setQuantity(product.product_id, $event.target.value)\n                      \"\n                    >\n                      <option\n                        v-for=\"num in availableQuantity(product)\"\n                        :key=\"num\"\n                        :value=\"num\"\n                      >\n                        {{ num }}\n                      </option>\n                    </select>\n                  </div>\n                  <div class=\"size-select-container\">\n                    <p class=\"size\">サイズ：{{ product.size }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"total-card\">\n            <div class=\"total-quantity\">合計個数 {{ totalQuantity }} 個</div>\n            <div class=\"total-price\">\n              合計金額 ¥{{ formatNumber(totalPrice) }}(税込)\n            </div>\n          </div>\n        </div>\n        <div class=\"right-container\">\n          <div class=\"pay-info-check\">\n            <div class=\"pay-address-container\">\n              <p class=\"pay-text\">お届け先</p>\n              <p class=\"pay-info\" v-if=\"selectedAddress\">\n                {{ selectedAddress.address }}\n              </p>\n              <p class=\"pay-info\" v-else>住所が選択されていません</p>\n            </div>\n            <div class=\"pay-method-container\">\n              <p class=\"pay-text\">お支払い</p>\n              <p class=\"pay-method\">\n                {{ selectedPaymentMethod.name }}\n              </p>\n              <p class=\"pay-info\" v-if=\"shouldShowDescription\">\n                {{ selectedPaymentMethod.description }}\n              </p>\n            </div>\n            <div class=\"pay-day-container\">\n              <p class=\"pay-text\">注文確定日</p>\n              <p class=\"pay-info\">{{ formattedDate }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"button-container\">\n        <button class=\"return-to-payment\" @click=\"returnToPayment\">\n          ← 支払い画面へ戻る\n        </button>\n        <button class=\"confirm-button\" @click=\"confirmOrder\">\n          注文を確定する\n        </button>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { computed, ref, onMounted } from \"vue\";\nimport { usePaymentStore } from \"@/store/payment.js\";\nimport { useCartStore } from \"@/store/cart.js\";\nimport { useProductStore } from \"@/store/product.js\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  setup() {\n    onMounted(() => {\n      window.scrollTo(0, 0);\n    });\n    const router = useRouter();\n    const paymentStore = usePaymentStore();\n    const selectedAddress = paymentStore.selectedAddress;\n    const selectedPaymentMethod = computed(() => {\n      const defaultMethod = { name: \"\", description: \"\" };\n      const selectedMethod =\n        paymentStore.selectedPaymentMethod || defaultMethod;\n\n      return {\n        name: selectedMethod.name || \"支払い方法が選択されていません\",\n        description:\n          selectedMethod.description || \"カード情報が選択されていません\",\n      };\n    });\n    const shouldShowDescription = computed(\n      () => selectedPaymentMethod.value.name === \"クレジットカード\"\n    );\n    const cartStore = useCartStore();\n    const totalQuantity = computed(() => {\n      return cartStore.cart.reduce(\n        (sum, product) => sum + Number(product.selectedQuantity),\n        0\n      );\n    });\n    const totalPrice = computed(() =>\n      cartStore.cart.reduce(\n        (sum, product) => sum + product.price * product.selectedQuantity,\n        0\n      )\n    );\n    const today = ref(new Date());\n    const formattedDate = computed(() => {\n      const year = today.value.getFullYear();\n      const month = today.value.getMonth() + 1;\n      const date = today.value.getDate();\n      return `${year}年${month}月${date}日`;\n    });\n    function setQuantity(productId, quantity) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n\n      const updatedQuantity = Number(quantity);\n      if (updatedQuantity <= product.stock) {\n        cartStore.setQuantity(productId, updatedQuantity);\n      }\n    }\n    function formatNumber(value) {\n      return Number(value).toLocaleString();\n    }\n    function getQuantityInCart(productId) {\n      const productInCart = cartStore.cart.find(\n        (item) => item.product_id === productId\n      );\n      return productInCart ? productInCart.selectedQuantity : 0;\n    }\n    function availableQuantity(product) {\n      return Array.from({ length: product.stock }, (_, i) => i + 1);\n    }\n    const confirmOrder = () => {\n      cartStore.clearCart();\n      router.push(\"/cart-complete\");\n    };\n    return {\n      selectedAddress,\n      selectedPaymentMethod,\n      shouldShowDescription,\n      cart: cartStore.cart,\n      totalQuantity,\n      totalPrice,\n      setQuantity,\n      formatNumber,\n      formattedDate,\n      getQuantityInCart,\n      availableQuantity,\n      confirmOrder,\n    };\n  },\n  methods: {\n    returnToPayment() {\n      this.$router.push(\"/cart-payment\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cart-check-container {\n  min-width: 950px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 100vh;\n  background-color: #eeeeee;\n  padding-top: 120px;\n}\n.contents-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n  padding: 0 30px 20px;\n}\n.left-container {\n  width: 488px;\n}\n\n.cart-card-container {\n  border: solid 1px black;\n  padding: 10px;\n  background-color: white;\n}\n.cart-card {\n  display: flex;\n  height: 250px;\n  width: 100%;\n}\n.product-photo-container {\n  width: 220px;\n  height: 220px;\n  display: block;\n  margin: 15px;\n}\n.product-photo {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n.product-detail {\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n.product-name {\n  font-size: 24px;\n}\n.product-price {\n  font-size: 24px;\n  margin-top: 10px;\n}\n.select-button-container {\n  display: flex;\n}\n.product-amount-container {\n  display: flex;\n  border-radius: 4px;\n  border: 1.5px solid black;\n  padding: 0 3px;\n}\n.product-amount {\n  border: none;\n}\n.amount {\n  margin: 0 0;\n  padding: 0 3px;\n  white-space: nowrap;\n}\n.size-select-container {\n  display: flex;\n  border-radius: 4px;\n  border: 1.5px solid black;\n  margin-left: 20px;\n  padding: 0 3px;\n}\n.size-select {\n  border: none;\n  white-space: nowrap;\n}\n.size {\n  margin: 0 0;\n  white-space: nowrap;\n}\n.total-card {\n  width: 100%;\n  font-size: 24px;\n  border: 1px solid black;\n  padding: 20px;\n  margin-top: 30px;\n  text-align: left;\n  background-color: white;\n}\n.right-container {\n  border: solid 1px black;\n  padding: 10px;\n  background-color: white;\n  width: 300px;\n  height: 350px;\n  text-align: center;\n}\n.pay-text {\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 15px;\n}\n.pay-info {\n  font-size: 14px;\n}\n.pay-method {\n  font-size: 14px;\n}\n.button-container {\n  display: flex;\n  padding-bottom: 30px;\n  margin-top: auto;\n  justify-content: space-between;\n  padding: 0 80px 50px 80px;\n}\n.return-to-payment {\n  font-size: 24px;\n  padding: 8px 14px;\n}\n.confirm-button {\n  font-size: 24px;\n  background-color: rgba(0, 0, 0, 0.766);\n  color: white;\n  padding: 8px 14px;\n}\n.confirm-button:hover {\n  box-shadow: 0 0 12px #a9a9a9;\n  color: rgb(241, 67, 67);\n  background-color: rgb(252, 195, 195);\n}\n.return-to-payment:hover {\n  box-shadow: 0 0 12px #a9a9a9;\n  background-color: #ffffff;\n}\n@media screen and (min-width: 950px) {\n  .left-container {\n    width: 54.6315%;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}