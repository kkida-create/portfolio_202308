{"ast":null,"code":"import AddressModal from '../components/AddressModal.vue';\nimport CreditModal from '../components/CreditModal.vue';\nexport default {\n  components: {\n    AddressModal,\n    CreditModal\n  },\n  data() {\n    return {\n      addresses: [],\n      paymentMethods: [{\n        name: 'クレジットカード',\n        description: 'Visa 末尾 xxxx Tanaka xx/xxxx',\n        hasModalButton: true\n      }, {\n        name: '代金引換え',\n        description: '国内配送のみ。代引手数料がかかります。',\n        hasModalButton: false\n      }, {\n        name: 'コンビニ・ATM・ネットバンキング・電子マネー支払い',\n        description: '商品の発送は代金のお支払い後になるため、お届け予定日はお支払い確定後にご案内いたします。',\n        hasModalButton: false\n      }],\n      selectedAddressIndex: null,\n      selectedPaymentMethodIndex: null,\n      isAddressModalVisible: false,\n      isCreditModalVisible: false\n    };\n  },\n  computed: {\n    displayedAddresses() {\n      return this.addresses.slice(0, 3);\n    }\n  },\n  methods: {\n    toggleAddressCircle(index) {\n      this.selectedAddressIndex = index;\n      this.$store.commit('setSelectedAddress', this.addresses[index]);\n    },\n    togglePaymentMethodCircle(index) {\n      this.selectedPaymentMethodIndex = index;\n    },\n    openAddressModal() {\n      this.isAddressModalVisible = true;\n    },\n    openCreditModal() {\n      this.isCreditModalVisible = true;\n    },\n    closeModal() {\n      this.isAddressModalVisible = false;\n      this.isCreditModalVisible = false;\n    },\n    deleteAddress(index) {\n      this.addresses.splice(index, 1);\n    },\n    submitForm() {\n      const newAddress = {\n        name: 'New Option',\n        isActive: false,\n        address: `${this.postCode} ${this.selectedPrefecture}${this.city}${this.houseNumber} ${this.buildingName}`\n      };\n      if (this.addresses.length === 3) {\n        this.addresses.pop();\n      }\n      this.addresses.unshift(newAddress);\n      this.postCode = '';\n      this.selectedPrefecture = '';\n      this.city = '';\n      this.houseNumber = '';\n      this.buildingName = '';\n    }\n  }\n};","map":{"version":3,"names":["AddressModal","CreditModal","components","data","addresses","paymentMethods","name","description","hasModalButton","selectedAddressIndex","selectedPaymentMethodIndex","isAddressModalVisible","isCreditModalVisible","computed","displayedAddresses","slice","methods","toggleAddressCircle","index","$store","commit","togglePaymentMethodCircle","openAddressModal","openCreditModal","closeModal","deleteAddress","splice","submitForm","newAddress","isActive","address","postCode","selectedPrefecture","city","houseNumber","buildingName","length","pop","unshift"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/views/CartPaymentView.vue"],"sourcesContent":["<template>\n  <main>\n    <div class=\"payment-top\">\n      <h1 class=\"page-title\">支払い画面</h1>\n      <div class=\"contents-container\">\n        <div class=\"address-container\">\n          <p class=\"address-title\">1 住所</p>\n          <div class=\"address-select-container\" v-for=\"(address, index) in displayedAddresses\" :key=\"index\">\n            <div class=\"outer-circle\" @click=\"toggleAddressCircle(index)\">\n              <div class=\"inner-circle\" :class=\"{ 'inner-circle-selected': selectedAddressIndex === index }\"></div>\n            </div>\n            <div class=\"address-text\">{{ address.address }}</div>\n            <button class=\"delete-address-button\" @click=\"deleteAddress(index)\">削除</button>\n          </div>\n          <div class=\"address-registration\" @click=\"openAddressModal\">\n            <div class=\"cross\"></div>\n            新しい住所を登録\n          </div>\n        </div>\n        <div class=\"payment-container\">\n          <p class=\"payment-title\">2 お支払い方法</p>\n          <div class=\"payment-info-container\" v-for=\"(method, index) in paymentMethods\" :key=\"index\">\n            <div class=\"outer-circle\" @click=\"togglePaymentMethodCircle(index)\">\n              <div\n                class=\"inner-circle\"\n                :class=\"{ 'inner-circle-selected': selectedPaymentMethodIndex === index }\"\n              ></div>\n            </div>\n            <div class=\"payment-info-contents\">\n              <div class=\"payment-info\">\n                <p class=\"payment-text\">{{ method.name }}</p>\n                <p class=\"payment-content\">{{ method.description }}</p>\n              </div>\n              <button v-if=\"method.hasModalButton\" class=\"credit-modal-open\" @click=\"openCreditModal\">\n                クレジットカードの変更\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"button-container\">\n        <button class=\"return-to-cart\">← カート一覧へ戻る</button>\n        <button class=\"go-to-cart-check\">ご注文確認へ進む →</button>\n      </div>\n      <AddressModal v-if=\"isAddressModalVisible\" @submit-form=\"closeModal\" @close-modal=\"closeModal\" />\n      <CreditModal v-if=\"isCreditModalVisible\" @close=\"closeModal\" />\n      <div v-if=\"isAddressModalVisible || isCreditModalVisible\" class=\"overlay\"></div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport AddressModal from '../components/AddressModal.vue'\nimport CreditModal from '../components/CreditModal.vue'\n\nexport default {\n  components: {\n    AddressModal,\n    CreditModal,\n  },\n  data() {\n    return {\n      addresses: [],\n      paymentMethods: [\n        {\n          name: 'クレジットカード',\n          description: 'Visa 末尾 xxxx Tanaka xx/xxxx',\n          hasModalButton: true,\n        },\n        {\n          name: '代金引換え',\n          description: '国内配送のみ。代引手数料がかかります。',\n          hasModalButton: false,\n        },\n        {\n          name: 'コンビニ・ATM・ネットバンキング・電子マネー支払い',\n          description: '商品の発送は代金のお支払い後になるため、お届け予定日はお支払い確定後にご案内いたします。',\n          hasModalButton: false,\n        },\n      ],\n      selectedAddressIndex: null,\n      selectedPaymentMethodIndex: null,\n      isAddressModalVisible: false,\n      isCreditModalVisible: false,\n    }\n  },\n  computed: {\n    displayedAddresses() {\n      return this.addresses.slice(0, 3);\n    },\n  },\n  methods: {\n    toggleAddressCircle(index) {\n      this.selectedAddressIndex = index\n      this.$store.commit('setSelectedAddress', this.addresses[index])\n    },\n    togglePaymentMethodCircle(index) {\n      this.selectedPaymentMethodIndex = index\n    },\n    openAddressModal() {\n      this.isAddressModalVisible = true\n    },\n    openCreditModal() {\n      this.isCreditModalVisible = true\n    },\n    closeModal() {\n      this.isAddressModalVisible = false\n      this.isCreditModalVisible = false\n    },\n    deleteAddress(index) {\n      this.addresses.splice(index, 1)\n    },\n    submitForm() {\n      const newAddress = {\n        name: 'New Option',\n        isActive: false,\n        address: `${this.postCode} ${this.selectedPrefecture}${this.city}${this.houseNumber} ${this.buildingName}`,\n      }\n      if (this.addresses.length === 3) {\n        this.addresses.pop();\n      }\n      this.addresses.unshift(newAddress)\n      this.postCode = ''\n      this.selectedPrefecture = ''\n      this.city = ''\n      this.houseNumber = ''\n      this.buildingName = ''\n    },\n  },\n}\n</script>\n\n<style scoped>\n.payment-top {\n  min-width: 950px;\n  background-color: #eeeeee;\n  min-height: 100vh;\n  padding: 30px 20px;\n  display: flex;\n  flex-direction: column;\n}\n.page-title {\n  font-size: 40px;\n}\n.contents-container {\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: left;\n}\n.outer-circle {\n  width: 30px;\n  height: 30px;\n  border: 2px solid black;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n.inner-circle {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n}\n.inner-circle-selected {\n  background-color: black;\n}\n.address-title {\n  font-size: 24px;\n}\n.address-select-container {\n  display: flex;\n  margin-top: 10px;\n}\n.address-text {\n  margin-left: 10px;\n}\n.address-registration {\n  display: flex;\n  align-items: center;\n  padding-left: 5px;\n  margin-top: 10px;\n  display: inline-block;\n}\n.address-registration:hover {\n  color: blue;\n  cursor: pointer;\n}\n.address-registration:hover .cross::before,\n.address-registration:hover .cross::after {\n  background-color: blue;\n}\n.cross {\n  display: inline-block;\n  position: relative;\n  height: 20px;\n  width: 20px;\n  margin-right: 10px;\n}\n\n.cross::before,\n.cross::after {\n  content: '';\n  position: absolute;\n  background: rgba(9, 9, 9, 0.506);\n}\n\n.cross::before {\n  height: 5px;\n  width: 100%;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n}\n\n.cross::after {\n  width: 5px;\n  height: 100%;\n  left: 50%;\n  top: 0;\n  transform: translateX(-50%);\n}\n.payment-container {\n  margin-top: 30px;\n}\n.payment-title {\n  font-size: 24px;\n}\n.payment-info-container {\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  width: 90%;\n}\n\n.payment-info-contents {\n  border: solid 1px black;\n  padding: 14px;\n  margin-left: 10px;\n  width: 100%;\n}\n.payment-info-contents:nth-last-of-type(1) {\n  display: flex;\n  justify-content: space-between;\n}\n.payment-text {\n  font-weight: bold;\n  margin: 0;\n}\n.payment-content {\n  margin: 0;\n}\n.address-modal {\n  display: none;\n}\n.credit-modal {\n  display: none;\n}\n.credit-modal-open {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  color: rgb(0, 102, 255);\n}\n.credit-modal-open:hover {\n  text-decoration: underline;\n}\n.return-to-cart,\n.go-to-cart-check {\n  font-size: 24px;\n  padding: 8px 14px;\n}\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: auto;\n  padding: 0 20px;\n}\n.return-to-cart:hover,\n.go-to-cart-check:hover {\n  background-color: darkgray;\n}\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9;\n  overflow: hidden;\n}\n</style>\n"],"mappings":"AAoDA,OAAOA,YAAW,MAAO,gCAA+B;AACxD,OAAOC,WAAU,MAAO,+BAA8B;AAEtD,eAAe;EACbC,UAAU,EAAE;IACVF,YAAY;IACZC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE,CACd;QACEC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAE,6BAA6B;QAC1CC,cAAc,EAAE;MAClB,CAAC,EACD;QACEF,IAAI,EAAE,OAAO;QACbC,WAAW,EAAE,qBAAqB;QAClCC,cAAc,EAAE;MAClB,CAAC,EACD;QACEF,IAAI,EAAE,4BAA4B;QAClCC,WAAW,EAAE,8CAA8C;QAC3DC,cAAc,EAAE;MAClB,CAAC,CACF;MACDC,oBAAoB,EAAE,IAAI;MAC1BC,0BAA0B,EAAE,IAAI;MAChCC,qBAAqB,EAAE,KAAK;MAC5BC,oBAAoB,EAAE;IACxB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACV,SAAS,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAACC,KAAK,EAAE;MACzB,IAAI,CAACT,oBAAmB,GAAIS,KAAI;MAChC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAChB,SAAS,CAACc,KAAK,CAAC;IAChE,CAAC;IACDG,yBAAyBA,CAACH,KAAK,EAAE;MAC/B,IAAI,CAACR,0BAAyB,GAAIQ,KAAI;IACxC,CAAC;IACDI,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACX,qBAAoB,GAAI,IAAG;IAClC,CAAC;IACDY,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACX,oBAAmB,GAAI,IAAG;IACjC,CAAC;IACDY,UAAUA,CAAA,EAAG;MACX,IAAI,CAACb,qBAAoB,GAAI,KAAI;MACjC,IAAI,CAACC,oBAAmB,GAAI,KAAI;IAClC,CAAC;IACDa,aAAaA,CAACP,KAAK,EAAE;MACnB,IAAI,CAACd,SAAS,CAACsB,MAAM,CAACR,KAAK,EAAE,CAAC;IAChC,CAAC;IACDS,UAAUA,CAAA,EAAG;MACX,MAAMC,UAAS,GAAI;QACjBtB,IAAI,EAAE,YAAY;QAClBuB,QAAQ,EAAE,KAAK;QACfC,OAAO,EAAG,GAAE,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,kBAAmB,GAAE,IAAI,CAACC,IAAK,GAAE,IAAI,CAACC,WAAW,IAAI,IAAI,CAACC,YAAa;MAC3G;MACA,IAAI,IAAI,CAAC/B,SAAS,CAACgC,MAAK,KAAM,CAAC,EAAE;QAC/B,IAAI,CAAChC,SAAS,CAACiC,GAAG,CAAC,CAAC;MACtB;MACA,IAAI,CAACjC,SAAS,CAACkC,OAAO,CAACV,UAAU;MACjC,IAAI,CAACG,QAAO,GAAI,EAAC;MACjB,IAAI,CAACC,kBAAiB,GAAI,EAAC;MAC3B,IAAI,CAACC,IAAG,GAAI,EAAC;MACb,IAAI,CAACC,WAAU,GAAI,EAAC;MACpB,IAAI,CAACC,YAAW,GAAI,EAAC;IACvB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}