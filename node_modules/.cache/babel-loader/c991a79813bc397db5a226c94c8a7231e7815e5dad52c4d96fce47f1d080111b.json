{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nvar routes = [{\n  path: '/',\n  redirect: '/top'\n}, {\n  path: '/top',\n  name: 'top',\n  component: function component() {\n    return import( /* webpackChunkName: \"top\" */'../views/TopView.vue');\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"display\" */'../views/LoginPage.vue');\n  }\n}, {\n  path: '/contact',\n  name: 'contact',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"contact\" */'../views/ContactView.vue');\n  }\n}, {\n  path: '/contact-confirm',\n  name: 'contactConfirm',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"contactConfirm\" */'../views/ContactConfirm.vue');\n  },\n  beforeEnter: function beforeEnter(to, from, next) {\n    if (from.name === 'contact') {\n      next();\n    } else {\n      next('/contact');\n    }\n  }\n}, {\n  path: '/cart-list',\n  name: 'CartList',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"CartList\" */'../views/CartListView.vue');\n  }\n}, {\n  path: '/cart-payment',\n  name: 'CartPayment',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"CartPayment\" */'../views/CartPaymentView.vue');\n  }\n}, {\n  path: '/cart-check',\n  name: 'CartCheck',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"CartCheck\" */'../views/CartCheckView.vue');\n  }\n}, {\n  path: '/cart-complete',\n  name: 'CartComplete',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"CartComplete\" */'../views/CartCompleteView.vue');\n  }\n}, {\n  path: '/product',\n  name: 'Product',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"Product\" */'../views/ProductView.vue');\n  }\n}, {\n  path: '/productDetails',\n  name: 'productDetails',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"ProductDetails\" */'../views/ProductDetailsView.vue');\n  }\n}, {\n  path: '/favorite',\n  name: 'Favorite',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: function component() {\n    return import( /* webpackChunkName: \"Favorite\" */'../views/FavoriteView.vue');\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","routes","path","redirect","name","component","beforeEnter","to","from","next","router","history","process","env","BASE_URL"],"sources":["/Users/kitakanta/Desktop/就活/ポートフォリオ_20230819/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/top',\n  },\n  {\n    path: '/top',\n    name: 'top',\n    component: () => import(/* webpackChunkName: \"top\" */ '../views/TopView.vue'),\n  },\n  {\n    path: '/login',\n    name: 'login',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"display\" */ '../views/LoginPage.vue'),\n  },\n  {\n    path: '/contact',\n    name: 'contact',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"contact\" */ '../views/ContactView.vue'),\n  },\n  {\n    path: '/contact-confirm',\n    name: 'contactConfirm',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"contactConfirm\" */ '../views/ContactConfirm.vue'),\n    beforeEnter: (to, from, next) => {\n      if (from.name === 'contact') {\n        next()\n      } else {\n        next('/contact')\n      }\n    },\n  },\n  {\n    path: '/cart-list',\n    name: 'CartList',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartList\" */ '../views/CartListView.vue'),\n  },\n  {\n    path: '/cart-payment',\n    name: 'CartPayment',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartPayment\" */ '../views/CartPaymentView.vue'),\n  },\n  {\n    path: '/cart-check',\n    name: 'CartCheck',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartCheck\" */ '../views/CartCheckView.vue'),\n  },\n  {\n    path: '/cart-complete',\n    name: 'CartComplete',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"CartComplete\" */ '../views/CartCompleteView.vue'),\n  },\n  {\n    path: '/product',\n    name: 'Product',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"Product\" */ '../views/ProductView.vue'),\n  },\n  {\n    path: '/productDetails',\n    name: 'productDetails',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ProductDetails\" */ '../views/ProductDetailsView.vue'),\n  },\n  {\n    path: '/favorite',\n    name: 'Favorite',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"Favorite\" */ '../views/FavoriteView.vue'),\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n})\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}