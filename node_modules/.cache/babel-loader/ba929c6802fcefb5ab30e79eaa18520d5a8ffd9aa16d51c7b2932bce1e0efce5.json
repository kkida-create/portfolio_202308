{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { useContactStore } from \"@/store/contact\";\nvar contactStore = useContactStore();\nexport default {\n  data: function data() {\n    return {\n      formLists: [{\n        label: \"お名前\",\n        type: \"text\"\n      }, {\n        label: \"メールアドレス\",\n        type: \"email\"\n      }, {\n        label: \"タイトル\",\n        type: \"text\"\n      }, {\n        label: \"メッセージ\"\n      }],\n      requiredText: [],\n      announceText: false\n    };\n  },\n  methods: {\n    submitContactStore: function submitContactStore() {\n      var setFormInput = contactStore.setFormInput;\n      setFormInput(this.formInput);\n    },\n    validationTrigger: function validationTrigger(index) {\n      if (!this.formInput[index]) {\n        this.requiredText[index] = true;\n      }\n      if (index == 1) {\n        var emailChecked = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+[a-z]$/;\n        var testResult = emailChecked.test(this.formInput[1]);\n        if (!testResult) {\n          alert(\"メールアドレスの入力に誤りがあります。「＠」を含む正しいメールアドレスを入力してください。\");\n        }\n        return testResult;\n      }\n    }\n  },\n  computed: {\n    formInput: function formInput() {\n      var inputInformation = contactStore.inputInformation;\n      return inputInformation;\n    }\n  }\n};","map":{"version":3,"names":["useContactStore","contactStore","data","formLists","label","type","requiredText","announceText","methods","submitContactStore","setFormInput","formInput","validationTrigger","index","emailChecked","testResult","test","alert","computed","inputInformation"],"sources":["/Users/kitakanta/Desktop/就活/ポートフォリオ_20230819/src/views/ContactView.vue"],"sourcesContent":["<template>\n  <main>\n    <div class=\"all-contents-wrapper\">\n      <h2 class=\"main-title\">CONTACT&emsp;FORM</h2>\n      <div class=\"form-contents\">\n        <div\n          class=\"form-container\"\n          v-for=\"(list, index) in formLists\"\n          :key=\"list.id\"\n        >\n          <label class=\"form-label\" :for=\"index\">{{ list.label }}</label>\n          <input\n            class=\"form-input\"\n            :type=\"list.type\"\n            :id=\"index\"\n            v-model=\"formInput[index]\"\n            v-if=\"index < 3\"\n            @blur=\"validationTrigger(index)\"\n            @focus=\"requiredText[index] = false\"\n          />\n          <textarea\n            class=\"form-textarea\"\n            :id=\"index\"\n            cols=\"30\"\n            rows=\"10\"\n            v-model=\"formInput[index]\"\n            v-else\n            @blur=\"validationTrigger(index)\"\n            @focus=\"requiredText[index] = false\"\n          />\n          <p v-show=\"requiredText[index]\">※項目を入力してください</p>\n        </div>\n        <router-link\n          v-if=\"formInput[0] && formInput[1] && formInput[2] && formInput[3]\"\n          class=\"confirm-link\"\n          to=\"/contact-confirm\"\n          @click=\"submitContactStore\"\n        >\n          <p class=\"confirm-text\">確認画面へ進む</p>\n        </router-link>\n        <div v-else class=\"confirm-link\" @click=\"announceText = true\">\n          <p class=\"confirm-text\">確認画面へ進む</p>\n          <p class=\"announce-text\" v-show=\"announceText\">\n            ※全ての項目を入力してください\n          </p>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { useContactStore } from \"@/store/contact\";\nconst contactStore = useContactStore();\nexport default {\n  data() {\n    return {\n      formLists: [\n        {\n          label: \"お名前\",\n          type: \"text\",\n        },\n        {\n          label: \"メールアドレス\",\n          type: \"email\",\n        },\n        {\n          label: \"タイトル\",\n          type: \"text\",\n        },\n        {\n          label: \"メッセージ\",\n        },\n      ],\n      requiredText: [],\n      announceText: false,\n    };\n  },\n  methods: {\n    submitContactStore() {\n      const setFormInput = contactStore.setFormInput;\n      setFormInput(this.formInput);\n    },\n    validationTrigger(index) {\n      if (!this.formInput[index]) {\n        this.requiredText[index] = true;\n      }\n      if (index == 1) {\n        const emailChecked = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+[a-z]$/;\n        const testResult = emailChecked.test(this.formInput[1]);\n        if (!testResult) {\n          alert(\n            \"メールアドレスの入力に誤りがあります。「＠」を含む正しいメールアドレスを入力してください。\"\n          );\n        }\n        return testResult;\n      }\n    },\n  },\n  computed: {\n    formInput() {\n      const inputInformation = contactStore.inputInformation;\n      return inputInformation;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.all-contents-wrapper {\n  background-color: #eeeeee;\n  padding: 236px 0 120px;\n  padding-top: 236px;\n  /* ヘッダー分の余白：116px */\n}\n.main-title {\n  font-size: 40px;\n  text-align: center;\n}\n.form-contents {\n  max-width: 600px;\n  margin: 80px auto 0;\n}\n.form-container + .form-container {\n  margin-top: 20px;\n}\n.form-label,\n.form-input,\n.form-textarea {\n  display: block;\n  width: 100%;\n}\n.form-label {\n  font-size: 18px;\n}\n.form-input,\n.form-textarea {\n  border: none;\n  font-size: 20px;\n}\n.form-textarea {\n  resize: none;\n}\n.confirm-link {\n  position: relative;\n  text-decoration: none;\n  border: 1px solid #000000;\n  display: block;\n  margin-top: 40px;\n  padding: 20px;\n}\n.confirm-link:hover {\n  box-shadow: 0 0 12px #a9a9a9;\n  background-color: #ffffff;\n}\n.confirm-text {\n  color: #000000;\n  position: relative;\n  text-align: center;\n  margin-bottom: 0;\n  font-size: 18px;\n}\n.confirm-text::after {\n  content: \"→\";\n  position: absolute;\n  right: 20px;\n}\n.announce-text {\n  position: absolute;\n  bottom: -40px;\n  left: 50%;\n  transform: translateX(-50%);\n  color: #ff0000;\n  margin-bottom: 0;\n}\n.hidden-content {\n  display: none;\n}\n</style>\n"],"mappings":";;AAoDA,SAASA,eAAc,QAAS,iBAAiB;AACjD,IAAMC,YAAW,GAAID,eAAe,CAAC,CAAC;AACtC,eAAe;EACbE,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CACT;QACEC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE;MACT,CAAC,CACF;MACDE,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkB,WAAAA,mBAAA,EAAG;MACnB,IAAMC,YAAW,GAAIT,YAAY,CAACS,YAAY;MAC9CA,YAAY,CAAC,IAAI,CAACC,SAAS,CAAC;IAC9B,CAAC;IACDC,iBAAiB,WAAAA,kBAACC,KAAK,EAAE;MACvB,IAAI,CAAC,IAAI,CAACF,SAAS,CAACE,KAAK,CAAC,EAAE;QAC1B,IAAI,CAACP,YAAY,CAACO,KAAK,IAAI,IAAI;MACjC;MACA,IAAIA,KAAI,IAAK,CAAC,EAAE;QACd,IAAMC,YAAW,GAAI,qCAAqC;QAC1D,IAAMC,UAAS,GAAID,YAAY,CAACE,IAAI,CAAC,IAAI,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAACI,UAAU,EAAE;UACfE,KAAK,CACH,+CACF,CAAC;QACH;QACA,OAAOF,UAAU;MACnB;IACF;EACF,CAAC;EACDG,QAAQ,EAAE;IACRP,SAAS,WAAAA,UAAA,EAAG;MACV,IAAMQ,gBAAe,GAAIlB,YAAY,CAACkB,gBAAgB;MACtD,OAAOA,gBAAgB;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}