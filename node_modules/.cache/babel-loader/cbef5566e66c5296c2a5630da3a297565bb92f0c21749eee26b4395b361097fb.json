{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { usePaymentStore } from '@/store/payment.js';\nexport default {\n  computed: {\n    months() {\n      // 1から12までの月の配列を生成\n      return Array.from({\n        length: 12\n      }, (_, i) => i + 1);\n    },\n    years() {\n      // 現在の年から20年後までの年の配列を生成\n      const currentYear = new Date().getFullYear();\n      const endYear = currentYear + 20;\n      return Array.from({\n        length: endYear - currentYear + 1\n      }, (_, i) => currentYear + i);\n    }\n  },\n  setup() {\n    const paymentStore = usePaymentStore();\n    const selectedCreditCardIndex = ref(paymentStore.selectedCreditCardIndex);\n    const selectedPaymentMethodIndex = ref(paymentStore.selectedPaymentMethodIndex);\n    const selectedCreditCardCircle = ref(paymentStore.selectedCreditCardCircle);\n    const selectedPaymentMethodCircle = ref(paymentStore.selectedPaymentMethodCircle);\n    const displayedCreditCards = computed(() => paymentStore.creditCards.slice(0, 3));\n    const selectedCreditCard = computed(() => paymentStore.selectedCreditCard);\n    const isCreditModalVisible = ref(true);\n    const isCreditAddModalVisible = ref(false);\n    const newCreditCard = ref({\n      number: '',\n      name: '',\n      month: '',\n      year: ''\n    });\n    const toggleCreditCardCircle = index => {\n      if (displayedCreditCards.value[index] === undefined) {\n        console.error('Invalid index:', index, 'Credit Cards:', displayedCreditCards.value);\n        return;\n      }\n      selectedCreditCardIndex.value = index;\n      console.log('Selected credit card to set:', displayedCreditCards.value[index]);\n      selectedCreditCardCircle.value = true;\n      paymentStore.setSelectedCreditCard(displayedCreditCards.value[index]);\n      paymentStore.setSelectedCreditCardIndex(index);\n      paymentStore.setSelectedCreditCardCircle(true);\n    };\n    const togglePaymentMethodCircle = index => {\n      selectedPaymentMethodIndex.value = index;\n      selectedPaymentMethodCircle.value = true;\n      paymentStore.setSelectedPaymentMethodIndex(index);\n      paymentStore.setSelectedPaymentMethodCircle(true);\n    };\n    const openCreditModal = () => {\n      isCreditModalVisible.value = true;\n    };\n    const closeModal = () => {\n      isCreditModalVisible.value = false;\n    };\n    const openCreditAddModal = () => {\n      isCreditAddModalVisible.value = true;\n    };\n    const closeCreditAddModal = () => {\n      isCreditAddModalVisible.value = false;\n    };\n    const deleteCreditCard = index => {\n      if (paymentStore.creditCards[index] === paymentStore.selectedCreditCard.value) {\n        paymentStore.setSelectedCreditCard(null);\n        paymentStore.setSelectedCreditCardIndex(null);\n        paymentStore.setSelectedCreditCardCircle(false);\n      } else if (selectedCreditCardIndex.value !== null && index < selectedCreditCardIndex.value) {\n        selectedCreditCardIndex.value = selectedCreditCardIndex.value - 1;\n        paymentStore.setSelectedCreditCardIndex(selectedCreditCardIndex.value);\n      }\n      paymentStore.removeCreditCard(index);\n    };\n    const addCreditCard = creditCard => {\n      if (paymentStore.creditCards.length === 3) {\n        paymentStore.removeCreditCard(paymentStore.creditCards.length - 1);\n      }\n      paymentStore.addCreditCard(creditCard);\n      isCreditAddModalVisible.value = false;\n    };\n    return {\n      paymentStore,\n      selectedCreditCardIndex,\n      selectedPaymentMethodIndex,\n      selectedCreditCardCircle,\n      selectedCreditCard,\n      selectedPaymentMethodCircle,\n      displayedCreditCards,\n      toggleCreditCardCircle,\n      togglePaymentMethodCircle,\n      openCreditModal,\n      closeModal,\n      openCreditAddModal,\n      closeCreditAddModal,\n      deleteCreditCard,\n      addCreditCard,\n      isCreditModalVisible,\n      isCreditAddModalVisible,\n      newCreditCard\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","usePaymentStore","months","Array","from","length","_","i","years","currentYear","Date","getFullYear","endYear","setup","paymentStore","selectedCreditCardIndex","selectedPaymentMethodIndex","selectedCreditCardCircle","selectedPaymentMethodCircle","displayedCreditCards","creditCards","slice","selectedCreditCard","isCreditModalVisible","isCreditAddModalVisible","newCreditCard","number","name","month","year","toggleCreditCardCircle","index","value","undefined","console","error","log","setSelectedCreditCard","setSelectedCreditCardIndex","setSelectedCreditCardCircle","togglePaymentMethodCircle","setSelectedPaymentMethodIndex","setSelectedPaymentMethodCircle","openCreditModal","closeModal","openCreditAddModal","closeCreditAddModal","deleteCreditCard","removeCreditCard","addCreditCard","creditCard"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/components/CreditModal.vue"],"sourcesContent":["<template>\n  <div class=\"credit-modal-container\">\n    <div class=\"credit-modal\">\n      <div class=\"top-container\">\n        <h1 class=\"credit-modal-title\">お客様のクレジットカード</h1>\n        <button class=\"close-modal-button\" @click=\"isCreditModalVisible = false\">×</button>\n      </div>\n      <div class=\"credit-info-container\" v-for=\"(creditCard, index) in displayedCreditCards\" :key=\"index\">\n        <div class=\"outer-circle\" @click=\"toggleCreditCardCircle(index)\">\n          <div class=\"inner-circle\" :class=\"{ 'inner-circle-selected': selectedCreditCardIndex === index }\"></div>\n        </div>\n        <div class=\"credit-info\">\n          <div class=\"credit-company\">{{ creditCard.company }}</div>\n          <div class=\"credit-last-number\">末尾 {{ creditCard.lastNumber }}</div>\n          <div class=\"credit-name\">{{ creditCard.name }}</div>\n          <div class=\"credit-date\">{{ creditCard.date }}</div>\n        </div>\n        <button class=\"delete-credit-card-button\" @click=\"deleteCreditCard(index)\">削除</button>\n      </div>\n      <div class=\"credit-registration\" @click=\"openCreditAddModal\">\n        <div class=\"cross\"></div>\n        新しいクレジットカードを追加\n      </div>\n      <div class=\"add-credit-modal\" v-if=\"isCreditAddModalVisible\">\n        <button class=\"close-sub-modal-button\" @click=\"closeCreditAddModal\">×</button>\n        <form class=\"modal-contents\">\n          <div class=\"credit-number-container\">\n            <div class=\"credit-number\">カード番号</div>\n            <input type=\"text\" class=\"credit-number-input\" v-model=\"newCreditCard.number\" required />\n          </div>\n          <div class=\"credit-name-container\">\n            <div class=\"credit-name-title\">カード名義人</div>\n            <input type=\"text\" class=\"credit-name-input\" v-model=\"newCreditCard.name\" required />\n          </div>\n          <div class=\"credit-date-container\">\n            <div class=\"credit-date-title\">有効期限</div>\n            <div class=\"credit-date-select\">\n              <select class=\"credit-month-select\" v-model=\"newCreditCard.month\" required>\n                <option value=\"\">月</option>\n                <option v-for=\"month in months\" :value=\"month\" :key=\"month\">0{{ month }}</option>\n              </select>\n              <select class=\"credit-year-select\" v-model=\"newCreditCard.year\" required>\n                <option value=\"\">年</option>\n                <option v-for=\"year in years\" :value=\"year\" :key=\"year\">{{ year }}</option>\n              </select>\n            </div>\n          </div>\n          <button class=\"credit-submit\" type=\"submit\" @click.prevent=\"addCreditCard\">カード追加</button>\n        </form>\n      </div>\n      <div v-if=\"isCreditModalVisible\" class=\"overlay\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref } from 'vue'\nimport { usePaymentStore } from '@/store/payment.js'\n\nexport default {\n  computed: {\n    months() {\n      // 1から12までの月の配列を生成\n      return Array.from({ length: 12 }, (_, i) => i + 1)\n    },\n    years() {\n      // 現在の年から20年後までの年の配列を生成\n      const currentYear = new Date().getFullYear()\n      const endYear = currentYear + 20\n      return Array.from({ length: endYear - currentYear + 1 }, (_, i) => currentYear + i)\n    },\n  },\n  setup() {\n    const paymentStore = usePaymentStore()\n    const selectedCreditCardIndex = ref(paymentStore.selectedCreditCardIndex)\n    const selectedPaymentMethodIndex = ref(paymentStore.selectedPaymentMethodIndex)\n    const selectedCreditCardCircle = ref(paymentStore.selectedCreditCardCircle)\n    const selectedPaymentMethodCircle = ref(paymentStore.selectedPaymentMethodCircle)\n    const displayedCreditCards = computed(() => paymentStore.creditCards.slice(0, 3))\n    const selectedCreditCard = computed(() => paymentStore.selectedCreditCard)\n    const isCreditModalVisible = ref(true)\n    const isCreditAddModalVisible = ref(false)\n    const newCreditCard = ref({\n      number: '',\n      name: '',\n      month: '',\n      year: '',\n    })\n\n    const toggleCreditCardCircle = (index) => {\n      if (displayedCreditCards.value[index] === undefined) {\n        console.error('Invalid index:', index, 'Credit Cards:', displayedCreditCards.value)\n        return\n      }\n      selectedCreditCardIndex.value = index\n      console.log('Selected credit card to set:', displayedCreditCards.value[index])\n      selectedCreditCardCircle.value = true\n      paymentStore.setSelectedCreditCard(displayedCreditCards.value[index])\n      paymentStore.setSelectedCreditCardIndex(index)\n      paymentStore.setSelectedCreditCardCircle(true)\n    }\n\n    const togglePaymentMethodCircle = (index) => {\n      selectedPaymentMethodIndex.value = index\n      selectedPaymentMethodCircle.value = true\n      paymentStore.setSelectedPaymentMethodIndex(index)\n      paymentStore.setSelectedPaymentMethodCircle(true)\n    }\n\n    const openCreditModal = () => {\n      isCreditModalVisible.value = true\n    }\n\n    const closeModal = () => {\n      isCreditModalVisible.value = false\n    }\n\n    const openCreditAddModal = () => {\n      isCreditAddModalVisible.value = true\n    }\n\n    const closeCreditAddModal = () => {\n      isCreditAddModalVisible.value = false\n    }\n\n    const deleteCreditCard = (index) => {\n      if (paymentStore.creditCards[index] === paymentStore.selectedCreditCard.value) {\n        paymentStore.setSelectedCreditCard(null)\n        paymentStore.setSelectedCreditCardIndex(null)\n        paymentStore.setSelectedCreditCardCircle(false)\n      } else if (selectedCreditCardIndex.value !== null && index < selectedCreditCardIndex.value) {\n        selectedCreditCardIndex.value = selectedCreditCardIndex.value - 1\n        paymentStore.setSelectedCreditCardIndex(selectedCreditCardIndex.value)\n      }\n      paymentStore.removeCreditCard(index)\n    }\n\n    const addCreditCard = (creditCard) => {\n      if (paymentStore.creditCards.length === 3) {\n        paymentStore.removeCreditCard(paymentStore.creditCards.length - 1)\n      }\n      paymentStore.addCreditCard(creditCard)\n      isCreditAddModalVisible.value = false\n    }\n\n    return {\n      paymentStore,\n      selectedCreditCardIndex,\n      selectedPaymentMethodIndex,\n      selectedCreditCardCircle,\n      selectedCreditCard,\n      selectedPaymentMethodCircle,\n      displayedCreditCards,\n      toggleCreditCardCircle,\n      togglePaymentMethodCircle,\n      openCreditModal,\n      closeModal,\n      openCreditAddModal,\n      closeCreditAddModal,\n      deleteCreditCard,\n      addCreditCard,\n      isCreditModalVisible,\n      isCreditAddModalVisible,\n      newCreditCard,\n    }\n  },\n}\n</script>\n<style>\n.credit-modal-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100vw;\n  min-height: 50vh;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  position: relative;\n}\n.credit-modal {\n  border: 1px solid black;\n  width: 900px;\n  height: 700px;\n  background-color: white;\n  position: absolute;\n  top: -50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.top-container {\n  display: flex;\n  justify-content: space-between;\n}\n.close-modal-button {\n  font-size: 30px;\n  background: none;\n  color: inherit;\n  border: none;\n  padding-right: 20px;\n  cursor: pointer;\n  outline: inherit;\n}\n.credit-modal-title {\n  border-bottom: 1px solid black;\n  width: 90%;\n  padding-top: 20px;\n  font-size: 40px;\n}\n.credit-info-container {\n  display: flex;\n  margin-top: 30px;\n}\n.outer-circle {\n  width: 30px;\n  height: 30px;\n  border: 2px solid black;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n.inner-circle {\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n}\n.inner-circle-selected {\n  background-color: black;\n}\n.credit-info {\n  display: flex;\n  margin-left: 10px;\n  font-size: 24px;\n}\n.credit-registration {\n  display: flex;\n  padding-left: 5px;\n  margin-top: 20px;\n  display: inline-block;\n  font-size: 20px;\n  color: rgba(39, 39, 39, 0.382);\n}\n.cross {\n  display: inline-block;\n  position: relative;\n  height: 16px;\n  width: 16px;\n  margin-right: 10px;\n  padding-top: 10px;\n}\n\n.cross::before,\n.cross::after {\n  content: '';\n  position: absolute;\n  background: rgba(9, 9, 9, 0.506);\n}\n\n.cross::before {\n  height: 5px;\n  width: 100%;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n}\n\n.cross::after {\n  width: 5px;\n  height: 100%;\n  left: 50%;\n  top: 0;\n  transform: translateX(-50%);\n}\n.credit-registration:hover {\n  color: blue;\n  cursor: pointer;\n}\n.credit-registration:hover .cross::before,\n.credit-registration:hover .cross::after {\n  background-color: blue;\n}\n.add-credit-modal {\n  width: 90%;\n  border: 1px solid black;\n  background-color: rgba(169, 169, 169, 0.406);\n  margin-top: 30px;\n  position: relative;\n  margin-left: 40px;\n}\n.close-sub-modal-button {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background: none;\n  color: inherit;\n  border: none;\n  padding-right: 10px;\n  cursor: pointer;\n  outline: inherit;\n  font-size: 30px;\n}\n.modal-contents {\n  padding: 30px 20px;\n}\n.credit-number-container {\n  display: flex;\n}\n.credit-number-input {\n  margin-left: 20px;\n  width: 50%;\n}\n.credit-name-container {\n  display: flex;\n  margin-top: 30px;\n}\n.credit-name-input {\n  margin-left: 20px;\n  width: 40%;\n}\n.credit-date-container {\n  display: flex;\n  margin-top: 30px;\n}\n.credit-month-select,\n.credit-year-select {\n  margin-left: 20px;\n  width: 120px;\n}\n.credit-submit {\n  margin-left: 82%;\n  white-space: nowrap;\n  font-size: 18px;\n}\n.credit-submit:hover {\n  margin-left: 82%;\n  white-space: nowrap;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}