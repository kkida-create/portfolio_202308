{"ast":null,"code":"import { useContactStore } from '@/store/contact';\nconst contactStore = useContactStore();\nexport default {\n  data() {\n    return {\n      formLists: [{\n        label: 'お名前',\n        type: 'text'\n      }, {\n        label: 'メールアドレス',\n        type: 'email'\n      }, {\n        label: 'タイトル',\n        type: 'text'\n      }, {\n        label: 'メッセージ'\n      }],\n      formInput: [],\n      requiredText: []\n    };\n  },\n  methods: {\n    submitContactStore() {\n      const setFormInput = contactStore.setFormInput;\n      setFormInput(this.formInput);\n    },\n    validationTrigger(index) {\n      if (!this.formInput[index]) {\n        this.requiredText[index] = true;\n      }\n      if (index == 1) {\n        const emailChecked = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+[a-z]$/;\n        const testResult = emailChecked.test(this.formInput[1]);\n        if (!testResult) {\n          alert('メールアドレスの入力に誤りがあります。「＠」を含む正しいメールアドレスを入力してください。');\n        }\n        return testResult;\n      }\n    }\n  }\n};","map":{"version":3,"names":["useContactStore","contactStore","data","formLists","label","type","formInput","requiredText","methods","submitContactStore","setFormInput","validationTrigger","index","emailChecked","testResult","test","alert"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/views/ContactView.vue"],"sourcesContent":["<template>\n  <main>\n    <div class=\"all-contents-wrapper\">\n      <h2 class=\"main-title\">CONTACT&emsp;FORM</h2>\n      <div class=\"form-contents\">\n        <div class=\"form-container\" v-for=\"(list, index) in formLists\" :key=\"list.id\">\n          <label class=\"form-label\" :for=\"index\">{{ list.label }}</label>\n          <input\n            class=\"form-input\"\n            :type=\"list.type\"\n            :id=\"index\"\n            v-model=\"formInput[index]\"\n            v-if=\"index < 3\"\n            @blur=\"validationTrigger(index)\"\n            @focus=\"requiredText[index] = false\"\n          />\n          <textarea\n            class=\"form-textarea\"\n            :id=\"index\"\n            cols=\"30\"\n            rows=\"10\"\n            v-model=\"formInput[index]\"\n            v-else\n            @blur=\"validationTrigger(index)\"\n            @focus=\"requiredText[index] = false\"\n          />\n          <p v-show=\"requiredText[index]\">※項目を入力してください</p>\n        </div>\n        <router-link\n          v-if=\"this.formInput[(0, 1, 2, 3)]\"\n          class=\"confirm-link\"\n          to=\"/contact-confirm\"\n          @click=\"submitContactStore\"\n        >\n          <p class=\"confirm-text\">確認画面へ進む</p>\n        </router-link>\n        <div v-else class=\"confirm-link\">\n          <p class=\"confirm-text\">確認画面へ進む</p>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { useContactStore } from '@/store/contact'\nconst contactStore = useContactStore()\nexport default {\n  data() {\n    return {\n      formLists: [\n        {\n          label: 'お名前',\n          type: 'text',\n        },\n        {\n          label: 'メールアドレス',\n          type: 'email',\n        },\n        {\n          label: 'タイトル',\n          type: 'text',\n        },\n        {\n          label: 'メッセージ',\n        },\n      ],\n      formInput: [],\n      requiredText: [],\n    }\n  },\n  methods: {\n    submitContactStore() {\n      const setFormInput = contactStore.setFormInput\n      setFormInput(this.formInput)\n    },\n    validationTrigger(index) {\n      if (!this.formInput[index]) {\n        this.requiredText[index] = true\n      }\n      if (index == 1) {\n        const emailChecked = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+[a-z]$/\n        const testResult = emailChecked.test(this.formInput[1])\n        if (!testResult) {\n          alert('メールアドレスの入力に誤りがあります。「＠」を含む正しいメールアドレスを入力してください。')\n        }\n        return testResult\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.all-contents-wrapper {\n  background-color: #eeeeee;\n  padding: 236px 0 120px;\n  padding-top: 236px;\n  /* ヘッダー分の余白：116px */\n}\n.main-title {\n  font-size: 40px;\n  text-align: center;\n}\n.form-contents {\n  max-width: 600px;\n  margin: 80px auto 0;\n}\n.form-container + .form-container {\n  margin-top: 20px;\n}\n.form-label,\n.form-input,\n.form-textarea {\n  display: block;\n  width: 100%;\n}\n.form-label {\n  font-size: 18px;\n}\n.form-input,\n.form-textarea {\n  border: none;\n  font-size: 20px;\n}\n.form-textarea {\n  resize: none;\n}\n/* .confirm-button {\n  width: 100%;\n  border: none;\n  display: block;\n  margin-top: 40px;\n  padding: 0;\n} */\n.confirm-link {\n  text-decoration: none;\n  border: 1px solid #000000;\n  display: block;\n  margin-top: 40px;\n  padding: 20px;\n}\n.confirm-link:hover {\n  box-shadow: 0 0 12px #a9a9a9;\n  background-color: #ffffff;\n}\n.confirm-text {\n  color: #000000;\n  position: relative;\n  text-align: center;\n  margin-bottom: 0;\n  font-size: 18px;\n}\n.confirm-text::after {\n  content: '→';\n  position: absolute;\n  right: 20px;\n}\n.hidden-content {\n  display: none;\n}\n</style>\n"],"mappings":"AA6CA,SAASA,eAAc,QAAS,iBAAgB;AAChD,MAAMC,YAAW,GAAID,eAAe,CAAC;AACrC,eAAe;EACbE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CACT;QACEC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACR,CAAC,EACD;QACED,KAAK,EAAE;MACT,CAAC,CACF;MACDE,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,YAAW,GAAIT,YAAY,CAACS,YAAW;MAC7CA,YAAY,CAAC,IAAI,CAACJ,SAAS;IAC7B,CAAC;IACDK,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAAC,IAAI,CAACN,SAAS,CAACM,KAAK,CAAC,EAAE;QAC1B,IAAI,CAACL,YAAY,CAACK,KAAK,IAAI,IAAG;MAChC;MACA,IAAIA,KAAI,IAAK,CAAC,EAAE;QACd,MAAMC,YAAW,GAAI,qCAAoC;QACzD,MAAMC,UAAS,GAAID,YAAY,CAACE,IAAI,CAAC,IAAI,CAACT,SAAS,CAAC,CAAC,CAAC;QACtD,IAAI,CAACQ,UAAU,EAAE;UACfE,KAAK,CAAC,+CAA+C;QACvD;QACA,OAAOF,UAAS;MAClB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}