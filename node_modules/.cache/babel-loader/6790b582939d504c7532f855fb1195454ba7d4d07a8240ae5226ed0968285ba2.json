{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport { useProductStore } from './product.js';\nexport const useCartStore = defineStore({\n  id: 'cart',\n  state: () => ({\n    cart: []\n  }),\n  getters: {\n    totalAmount() {\n      return this.cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0);\n    },\n    quantityInCart: state => productId => {\n      const productInCart = state.cart.find(product => product.product_id === productId);\n      return productInCart ? productInCart.quantity : 0;\n    },\n    totalQuantity() {\n      return this.cart.reduce((acc, product) => acc + product.selectedQuantity, 0);\n    }\n  },\n  actions: {\n    addToCart(productId, quantity = 1) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n      if (!product) {\n        return;\n      }\n      const useSpecialPrice = ['0034', '0042', '0049', '0052'].includes(productId);\n      const selectedProduct = useSpecialPrice ? {\n        ...product,\n        price: product.special_price\n      } : product;\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      const selectedQuantity = productInCart ? productInCart.selectedQuantity : 0;\n      const updatedQuantity = selectedQuantity + Number(quantity);\n      if (useSpecialPrice) {\n        selectedProduct.price = product.special_price;\n      } else {\n        selectedProduct.price = product.price;\n      }\n      if (updatedQuantity > product.stock) {\n        console.error('Cannot add more items than available in stock.');\n        return;\n      }\n      if (productInCart) {\n        if (updatedQuantity <= product.stock) {\n          productInCart.selectedQuantity = updatedQuantity;\n        } else {\n          console.error('Cannot add more items than available in stock.');\n          return;\n        }\n      } else {\n        if (quantity <= product.stock) {\n          this.cart.push({\n            ...selectedProduct,\n            quantity: Number(quantity),\n            selectedQuantity: Number(quantity)\n          });\n        } else {\n          console.error('Cannot add more items than available in stock.');\n          return;\n        }\n      }\n    },\n    decreaseQuantity(productId) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart && productInCart.selectedQuantity > 0) {\n        productInCart.selectedQuantity--;\n      }\n    },\n    increaseQuantity(productId) {\n      const productStore = useProductStore();\n      const product = productStore.getProductById(productId);\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart && productInCart.selectedQuantity < product.stock) {\n        productInCart.selectedQuantity++;\n      }\n    },\n    setQuantity(productId, quantity) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart) {\n        productInCart.selectedQuantity = quantity;\n      }\n    },\n    updateSelectedQuantity(productId, selectedQuantity) {\n      const productInCart = this.cart.find(item => item.product_id === productId);\n      if (productInCart) {\n        productInCart.selectedQuantity = selectedQuantity;\n      }\n    },\n    removeProduct(productId) {\n      const index = this.cart.findIndex(item => item.product_id === productId);\n      if (index !== -1) {\n        this.cart.splice(index, 1);\n      }\n    },\n    clearCart() {\n      this.cart = [];\n    }\n  },\n  methods: {\n    getProductPrice(product) {\n      return product.price || product.special_price;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useProductStore","useCartStore","id","state","cart","getters","totalAmount","reduce","acc","curr","price","quantity","quantityInCart","productId","productInCart","find","product","product_id","totalQuantity","selectedQuantity","actions","addToCart","productStore","getProductById","useSpecialPrice","includes","selectedProduct","special_price","item","updatedQuantity","Number","stock","console","error","push","decreaseQuantity","increaseQuantity","setQuantity","updateSelectedQuantity","removeProduct","index","findIndex","splice","clearCart","methods","getProductPrice"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/store/cart.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useProductStore } from './product.js'\n\nexport const useCartStore = defineStore({\n  id: 'cart',\n  state: () => ({\n    cart: [],\n  }),\n  getters: {\n    totalAmount() {\n      return this.cart.reduce((acc, curr) => acc + curr.price * curr.quantity, 0)\n    },\n    quantityInCart: (state) => (productId) => {\n      const productInCart = state.cart.find((product) => product.product_id === productId)\n      return productInCart ? productInCart.quantity : 0\n    },\n    totalQuantity() {\n      return this.cart.reduce((acc, product) => acc + product.selectedQuantity, 0)\n    },\n  },\n  actions: {\n    addToCart(productId, quantity = 1) {\n      const productStore = useProductStore()\n      const product = productStore.getProductById(productId)\n      if (!product) {\n        return\n      }\n      const useSpecialPrice = ['0034', '0042', '0049', '0052'].includes(productId)\n      const selectedProduct = useSpecialPrice ? { ...product, price: product.special_price } : product\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n\n      const selectedQuantity = productInCart ? productInCart.selectedQuantity : 0\n      const updatedQuantity = selectedQuantity + Number(quantity)\n      if (useSpecialPrice) {\n        selectedProduct.price = product.special_price\n      } else {\n        selectedProduct.price = product.price\n      }\n      if (updatedQuantity > product.stock) {\n        console.error('Cannot add more items than available in stock.')\n        return\n      }\n      if (productInCart) {\n        if (updatedQuantity <= product.stock) {\n          productInCart.selectedQuantity = updatedQuantity\n        } else {\n          console.error('Cannot add more items than available in stock.')\n          return\n        }\n      } else {\n        if (quantity <= product.stock) {\n          this.cart.push({ ...selectedProduct, quantity: Number(quantity), selectedQuantity: Number(quantity) })\n        } else {\n          console.error('Cannot add more items than available in stock.')\n          return\n        }\n      }\n    },\n    decreaseQuantity(productId) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart && productInCart.selectedQuantity > 0) {\n        productInCart.selectedQuantity--\n      }\n    },\n    increaseQuantity(productId) {\n      const productStore = useProductStore()\n      const product = productStore.getProductById(productId)\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart && productInCart.selectedQuantity < product.stock) {\n        productInCart.selectedQuantity++\n      }\n    },\n    setQuantity(productId, quantity) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart) {\n        productInCart.selectedQuantity = quantity\n      }\n    },\n    updateSelectedQuantity(productId, selectedQuantity) {\n      const productInCart = this.cart.find((item) => item.product_id === productId)\n      if (productInCart) {\n        productInCart.selectedQuantity = selectedQuantity\n      }\n    },\n    removeProduct(productId) {\n      const index = this.cart.findIndex((item) => item.product_id === productId)\n      if (index !== -1) {\n        this.cart.splice(index, 1)\n      }\n    },\n    clearCart() {\n      this.cart = []\n    },\n  },\n  methods: {\n    getProductPrice(product) {\n      return product.price || product.special_price\n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}