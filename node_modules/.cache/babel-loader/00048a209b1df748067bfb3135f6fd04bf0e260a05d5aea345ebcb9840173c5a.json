{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"追加\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.addOption && _ctx.addOption(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedText = $event),\n    type: \"text\",\n    placeholder: \"テキストを入力してください\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.selectedText]]), _hoisted_1], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedOptions, (option, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(option), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","_ctx","addOption","selectedText","$event","placeholder","_hoisted_1","_Fragment","_renderList","selectedOptions","option","index","key","_toDisplayString"],"sources":["/Users/kitakanta/Desktop/comvace関係/comvace6_1/src/views/DisplayView.vue"],"sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"addOption\">\n      <input v-model=\"selectedText\" type=\"text\" placeholder=\"テキストを入力してください\" />\n      <button type=\"submit\">追加</button>\n    </form>\n\n    <div>\n      <ul>\n        <li v-for=\"(option, index) in selectedOptions\" :key=\"index\">{{ option }}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport { useTextStore } from '@/store/text.js'\n\nexport default defineComponent({\n  setup() {\n    const textStore = useTextStore()\n    const selectedText = computed(() => textStore.getText)\n    const selectedOptions = computed(() => textStore.getOptions)\n\n    const addOption = () => {\n      if (selectedText.value) {\n        textStore.addOption()\n      }\n    }\n\n    return {\n      selectedText,\n      selectedOptions,\n      addOption,\n    }\n  },\n})\n</script>\n"],"mappings":";gCAIMA,mBAAA,CAAiC;EAAzBC,IAAI,EAAC;AAAQ,GAAC,IAAE;;;uBAH5BC,mBAAA,CAWM,cAVJF,mBAAA,CAGO;IAHAG,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;sBAC9BN,mBAAA,CAAwE;+DAAxDO,IAAA,CAAAE,YAAY,GAAAC,MAAA;IAAET,IAAI,EAAC,MAAM;IAACU,WAAW,EAAC;iDAAtCJ,IAAA,CAAAE,YAAY,E,GAC5BG,UAAiC,C,4BAGnCZ,mBAAA,CAIM,cAHJA,mBAAA,CAEK,c,kBADHE,mBAAA,CAA6EW,SAAA,QAAAC,WAAA,CAA/CP,IAAA,CAAAQ,eAAe,GAAjCC,MAAM,EAAEC,KAAK;yBAAzBf,mBAAA,CAA6E;MAA7BgB,GAAG,EAAED;IAAK,GAAAE,gBAAA,CAAKH,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}